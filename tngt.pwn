#include <a_samp>
#define DUDB_FILE_PATH "\\TNGT\\%s.dudb.sav"
#include <dudb>
#include <dutils>
#include <sscanf>

#define 	COLOR_RED 		0xAA3333AA
#define 	COLOR_BLACK 	0x000000FF
#define 	COLOR_ORANGE 	0xFF9900AA
#define 	COLOR_GOLD 		0xFDCD3BAA
#define 	COLOR_YELLOW 	0xFFFF00AA
#define 	COLOR_GREEN 	0x33AA33AA
#define 	COLOR_AQUA 		0x18DEDCAA
#define 	COLOR_BLUE 		0x0000BBAA
#define 	COLOR_PINK 		0xFF66FFAA
#define 	COLOR_VIOLET 	0x800080AA
#define 	COLOR_CA 		0xEBE472FF
#define 	COLOR_MYBLUE 	0x1A8FCEFF
#define 	COLOR_WHITE 	0xFFFFFFAA
#define 	COLOR_LIGHTBLUE 0x33CCFFAA
#define 	COLOR_DARKRED 	0x660000AA
#define 	COLOR_BEIGE 	0xEDE58FAA
#define 	COLOR_LBLUE 	0x0066FFAA
#define 	LEAVE 			0xc8bebeAA
#define 	BANRED 			0xFF0000AA
#define 	COLOR_TRUEPINK 	0xFF3399AA
#define 	COLOR_GRAY 		0xC6BCBCAA
#define 	COLOR_GRAY2 	0xAAAAAAAA
#define 	ORANGE 			0xFF6600AA
#define 	COLOR_GREEN2 	0x40FF40FF
#define 	COLOR_PURPLE 	0x993399AA
#define 	COLOR_BROWN 	0xCC6633AA
#define     COLOR_BLUEGRAY 	0x6688BBFF
#define 	COLOR_SYSTEM 	0xEFEFF7AA
#define     INVISIBLE       0xffffff00

#define MAX_MONZ 9999
#define MAX_ALLS 5

#define dcmd(%1,%2,%3) if ((strcmp((%3)[1], #%1, true, (%2)) == 0) && ((((%3)[(%2) + 1] == 0) && (dcmd_%1(playerid, "")))||(((%3)[(%2) + 1] == 32) && (dcmd_%1(playerid, (%3)[(%2) + 2]))))) return 1

new pname[MAX_PLAYER_NAME];
new PLAYERLIST_authed[MAX_PLAYERS];
new Float:x, Float:y, Float:z, Float:z_angle;
new firstime[MAX_PLAYERS];
new inclass[MAX_PLAYERS];
new justdied[MAX_PLAYERS];
new Float:lvx[MAX_PLAYERS], Float:lvy[MAX_PLAYERS], Float:lvz[MAX_PLAYERS];
new bountied[MAX_PLAYERS];
new bountymon[MAX_PLAYERS];
new firstspawn[MAX_PLAYERS];
new ks1, ks2, ks3, ks4, ks5, ks6, ks7, ks8, ks9, ks10, ks11, ks12, ks13;
new br1, br2, br3, br4, br5, br6, br7, br8, br9, br10, br11, br12, br13, br14;
new sendername[MAX_PLAYER_NAME];
new giveplayer[MAX_PLAYER_NAME];
new ingod[MAX_PLAYERS];
new ingodcar[MAX_PLAYERS];
new godv;
new updatet;
new delaycd;
new delayt;
new lvl[MAX_PLAYERS];
new stealth[MAX_PLAYERS];
new bbowl[MAX_PLAYERS];

new lvl1[MAX_PLAYERS];
new lvlf[MAX_PLAYERS];
new muted[MAX_PLAYERS];
new invis[MAX_PLAYERS];
new ip[32];

new drunk[MAX_PLAYERS];

new id;
new pu;
new randhid;

new Menu:shop;
new Menu:shopweps;
new Menu:shoplife;
new Menu:shoprc;

new cart[MAX_PLAYERS];
new carcd[MAX_PLAYERS];
new cartime[MAX_PLAYERS];

new blockgoto[MAX_PLAYERS];
new blockpm[MAX_PLAYERS];

new Text:TextDraw1;

new Menu:vshop;
new Menu:cars;
new Menu:planes;
new Menu:bikes;
new Menu:lowrider;
new Menu:offroad;
new veh[MAX_PLAYERS][128], num2;

new logindialog[MAX_PLAYERS], regdialog[MAX_PLAYERS];
new s[128];

new owncar[MAX_PLAYERS];
new void;

new RandAnims[6][0] = {
{"DAN_LOOP_A"},
{"DNCE_M_A"},
{"DNCE_M_B"},
{"DNCE_M_C"},
{"DNCE_M_D"},
{"DNCE_M_E"}
};

new Float:gSkyPlayerSpawns[2][3] = {
{2660.5308,-1459.5101,79.3805},
{2660.3713,-1449.5316,79.3805}
};

new Float:gHiddenSpawns[14][3] = {
{630.6249,868.6136,-42.9609},
{-50.8686,1887.5018,17.6406},
{2155.5422,1138.4202,12.6484},
{1344.1263,2141.9802,11.0156},
{1735.8146,2691.7593,10.8203},
{2361.0950,2323.0244,8.1406},
{947.0961,2449.0281,10.8203},
{1086.0973,1077.0316,10.8382},
{-704.2496,2062.6240,60.3828},
{-1481.7496,2632.0142,58.7813},
{-827.2156,1502.4187,19.4981},
{-2228.5400,2326.6033,7.5469},
{-424.3493,2231.8066,42.4297},
{-228.9667,2736.5981,62.6875}
};

new Float:gFuelSpawns[37][4] = {
{2544.5032,	2805.8840,	19.9922,	257.5800},
{2556.2554,	2832.5313,	19.9922,	1.9000},
{2561.9175,	2848.5532,	19.9922,	256.6609},
{2613.9866,	2848.4475,	19.9922,	102.2487},
{2611.5500,	2845.7542,	16.7020,	87.5428},
{2545.9243,	2839.1824,	10.8203,	176.2378},
{2647.6553,	2805.0278,	10.8203,	285.1536},
{2672.9387,	2800.3374,	10.8203,	60.4288},
{2672.8306,	2792.1057,	10.8203,	121.8451},
{2647.7834,	2697.5884,	19.3222,	353.1684},
{2654.5427,	2720.3474,	19.3222,	303.5359},
{2653.2063,	2738.2432,	19.3222,	342.1389},
{2641.1350,	2703.2019,	25.8222,	191.6982},
{2599.1304,	2700.7249,	25.8222,	76.3487},
{2606.1384,	2721.5237,	25.8222,	261.2564},
{2597.3745,	2748.0884,	23.8222,	273.2050},
{2595.0657,	2776.6729,	23.8222,	254.3630},
{2601.3640,	2777.8101,	23.8222,	253.4439},
{2584.3940,	2825.1748,	27.8203,	244.5475},
{2631.8110,	2834.2593,	40.3281,	213.2975},
{2632.2852,	2834.9390,	122.9219,	197.6725},
{2646.1997,	2817.7070,	36.3222,	182.0474},
{2685.8875,	2816.6575,	36.3222,	129.9525},
{2691.1233,	2787.7883,	59.0212,	208.0777},
{2717.8071,	2771.3464,	74.8281,	72.3429},
{2695.2622,	2699.5488,	22.9472,	66.3686},
{2688.8206,	2689.0039,	28.1563,	14.8979},
{2655.0229,	2650.6807,	36.9154,	341.8097},
{2570.4668,	2701.2876,	22.9507,	204.0154},
{2498.9915,	2704.6204,	10.9844,	168.9241},
{2524.1584,	2743.3735,	10.9917,	150.3771},
{2498.3167,	2782.3357,	10.8203,	251.7015},
{2504.5142,	2805.9763,	14.8222,	108.6137},
{2522.2144,	2814.7087,	24.9536,	265.9478},
{2510.6292,	2849.6384,	14.8222,	191.4991},
{2618.2646,	2720.8005,	36.5386,	346.6828},
{2690.9980,	2741.9060,	19.0722,	91.6099}
};

new Float:gStealthSpawns[11][4] = {
{247.7163,121.5771,1010.2188,355.4899},
{256.4355,114.7679,1008.8203,320.9680},
{277.3387,119.2133,1008.8130,45.9677},
{273.2879,118.3248,1004.6172,255.3386},
{258.0491,117.6187,1003.2188,30.0738},
{234.2558,109.2726,1010.2118,88.8502},
{272.0483,110.9107,1004.6172,39.4847},
{246.4509,124.8202,1003.2188,175.0746},
{237.5760,121.5635,1003.2188,173.3530},
{216.3781,108.2648,1003.2188,298.2410},
{215.4613,124.2362,1003.2188,177.6758}
};

new Float:gRandomPlayerSpawns[23][3] = {
{1958.3783,1343.1572,15.3746},
{2199.6531,1393.3678,10.8203},
{2483.5977,1222.0825,10.8203},
{2637.2712,1129.2743,11.1797},
{2000.0106,1521.1111,17.0625},
{2024.8190,1917.9425,12.3386},
{2261.9048,2035.9547,10.8203},
{2262.0986,2398.6572,10.8203},
{2244.2566,2523.7280,10.8203},
{2335.3228,2786.4478,10.8203},
{2150.0186,2734.2297,11.1763},
{2158.0811,2797.5488,10.8203},
{1969.8301,2722.8564,10.8203},
{1652.0555,2709.4072,10.8265},
{1564.0052,2756.9463,10.8203},
{1271.5452,2554.0227,10.8203},
{1441.5894,2567.9099,10.8203},
{1480.6473,2213.5718,11.0234},
{1400.5906,2225.6960,11.0234},
{1598.8419,2221.5676,11.0625},
{1318.7759,1251.3580,10.8203},
{1558.0731,1007.8292,10.8125},
{1705.2347,1025.6808,10.8203}
};

new gRandBotText[20][0] = {
{"Tip: v1.4"},
{"Tip: Use /help for all commands"},
{"Tip: You can /register to save stats"},
{"Tip: You can play casino games at the 4Dragons and Caligula's, /slots and /allin"},
{"Tip: Save your locations with /saveloc and load them later with /home"},
{"Tip: See a server bug? Use /bug to report it"},
{"Tip: You can set your own spawn by using /saveloc and you'll spawn here every time you join the server"},
{"Tip: If you have a set spawn location, you can go to it using /home or use the random spawns using /clearloc"},
{"Tip: Use /shop to buy weapons, health, and RC cars"},
{"Tip: You can drive RC cars. Use /shop to buy one"},
{"Tip: You can buy a car at /carshop"},
{"Tip: Need quick cash? Sell your car using /sellcar"},
{"Tip: There is a hidden money pickup around Las Venturas. Find it for big cash!"},
{"Tip: There are hidden special weapon pickups at the Abandoned Air Field. Find them!"},
{"Tip: Using /stats [id] will show yours or other registered player's stats"},
{"Tip: Learn more about our account system using /acc. But you gotta be registered!"},
{"Tip: Registered players save their money automatically or using the bank, save their skin, position, and more. Register now!"},
{"Tip: Player Legend - Green: Registered players, Gray: Non-registered players, Orange/Beige: Admins"},
{"Tip: Wanna bank your money? Use /deposit to bank your cash, /withdraw to take money out, and /balance to see how much you've got"},
{"Tip: We've got all customization teles! /transfender, /locolowco, /archangels"}
};

new Float:gRandBloodCPs[12][3] = {
{-1429.226318, 944.217346, 1032.058837},
{-1383.981933, 970.307495, 1024.310546},
{-1343.880737, 960.894165, 1026.950683},
{-1334.020507, 994.243408, 1024.906005},
{-1351.053833, 1031.726440, 1027.841918},
{-1396.918945, 1048.401855, 1034.700439},
{-1424.342651, 1028.822509, 1026.235717},
{-1461.520996, 1020.602722, 1026.903686},
{-1475.960815, 996.354797, 1026.296142},
{-1465.616455, 959.776855, 1028.843627},
{-1437.500366, 960.009948, 1026.047607},
{-1403.082519, 963.041687, 1025.012451}
};

new RandCarAmt[8][0] = {
{1000},{1500},{2500},{3000},{3500},{4000},{4500},{5000}
};

new vehName[][] =
{
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
    "Stretch", "Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
    "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
    "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
    "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
    "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
    "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",
    "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
    "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick",
    "Boxvillde", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
    "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
    "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
    "Fortune", "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan",
    "Blade", "Freight", "Streak", "Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder",
    "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster", "Monster",
    "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30",
    "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car", "Police Car", "Police Car",
    "Police Ranger", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs",
    "Boxville", "Tiller", "Utility Trailer"
};

new Slots[5][0] = {
{"Cherry"},
{"Gold"},
{"Grape"},
{"Lemon"},
{"Bell"}
};
new Slots2[5][0] = {
{"Cherry"},
{"Gold"},
{"Grape"},
{"Lemon"},
{"Bell"}
};
new Slots3[5][0] = {
{"Cherry"},
{"Gold"},
{"Grape"},
{"Lemon"},
{"Bell"}
};

new pid[MAX_PLAYERS] = -1;

enum Params
{
	o,
	l
}

new Vehicle[2000][MAX_PLAYERS][Params];

forward PutAtPos(playerid);
forward SetPlayerRandomSpawn(playerid);
forward SetPlayerRandomSpawn2(playerid);
forward SetPlayerRandomSpawn3(playerid);
forward Update();
forward BotText();
forward Clock();
forward clock();
forward PlayerToPoint(Float:radi, playerid, Float:xx, Float:yy, Float:zz);
forward GodMode();
forward GodCarMode();
forward SellCarCount();
forward Delay();
forward RandomBounty();
forward UpdateScoreMoney();
forward MinigunCheck();
forward StealthCheck();
//forward ReloadMaps();
forward BloodCheck();

main()
{
	print("\n----------------------------------");
	print(" Super Epic Freeroam");
	print("----------------------------------\n");
}

public OnGameModeInit()
{
	CreateObject(4867, 3859.492432, -1886.581299, 3.075149, 0.0000, 0.0000, 0.0000);
	CreateObject(16771, 4402.194336, -1876.062866, 9.609457, 0.0000, 0.0000, 90.0000);

	SetGameModeText("Freeroam/Stunt/Fly/Deathmatch");
	UsePlayerPedAnims();
	EnableStuntBonusForAll(true);
	AllowInteriorWeapons(true);
	updatet = SetTimer("Update", 1000, 1);
	AllowAdminTeleport(true);
	SetTimer("BotText", 300000, 1);
	SetTimer("Clock",1440000,1);
	SetTimer("RandomBounty",600000,1);
	SetTimer("UpdateScoreMoney", 1000, 1);
	SetTimer("MinigunCheck", 1000, 1);
	SetTimer("JetCheck", 1000, 1);
	SetTimer("StealthCheck", 1000, 1);
	SetTimer("BloodCheck", 1000, 1);
	//SetTimer("ReloadMaps", 30000, 1);

	TextDraw1 = TextDrawCreate(18.000000,428.000000,"v1.4");
	TextDrawAlignment(TextDraw1,0);
	TextDrawBackgroundColor(TextDraw1,0x000000ff);
	TextDrawFont(TextDraw1,2);
	TextDrawLetterSize(TextDraw1,0.199999,0.899999);
	TextDrawColor(TextDraw1,0xffffffff);
	TextDrawSetOutline(TextDraw1,1);
	TextDrawSetProportional(TextDraw1,1);
	TextDrawSetShadow(TextDraw1,1);

	AddPlayerClass(280,1958.3783,1343.1572,15.3746,270.1425,0,0,24,300,-1,-1);
	AddPlayerClass(281,1958.3783,1343.1572,15.3746,270.1425,0,0,24,300,-1,-1);
	AddPlayerClass(282,1958.3783,1343.1572,15.3746,270.1425,0,0,24,300,-1,-1);
	AddPlayerClass(283,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(284,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(285,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(286,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(287,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(254,1958.3783,1343.1572,15.3746,0.0,0,0,24,300,-1,-1);
	AddPlayerClass(255,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(256,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(257,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(258,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(259,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(260,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(261,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(262,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(263,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(264,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(274,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(275,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(276,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(1,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(2,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(290,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(291,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(292,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(293,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(294,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(295,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(296,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(297,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(298,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
    AddPlayerClass(299,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(277,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(278,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(279,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(288,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(47,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(48,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(49,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(50,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(51,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(52,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(53,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(54,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(55,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(56,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(57,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(58,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(59,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(60,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(61,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(62,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(63,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(64,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(66,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(67,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(68,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(69,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(70,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(71,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(72,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(73,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(75,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(76,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(78,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(79,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(80,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(81,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(82,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(83,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(84,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(85,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(87,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(88,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(89,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(91,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(92,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(93,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(95,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(96,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(97,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(98,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(99,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(100,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(101,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(102,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(103,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(104,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(105,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(106,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(107,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(108,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(109,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(110,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(111,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(112,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(113,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(114,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(115,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(116,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(117,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(118,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(120,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(121,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(122,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(123,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(124,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(125,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(126,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(127,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(128,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(129,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(131,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(133,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(134,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(135,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(136,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(137,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(138,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(139,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(140,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(141,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(142,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(143,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(144,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(145,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(146,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(147,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(148,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(150,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(151,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(152,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(153,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(154,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(155,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(156,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(157,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(158,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(159,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(160,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(161,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(162,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(163,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(164,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(165,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(166,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(167,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(168,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(169,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(170,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(171,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(172,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(173,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(174,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(175,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(176,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(177,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(178,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(179,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(180,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(181,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(182,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(183,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(184,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(185,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(186,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(187,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(188,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(189,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(190,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(191,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(192,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(193,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(194,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(195,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(196,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(197,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(198,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(199,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(200,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(201,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(202,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(203,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(204,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(205,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(206,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(207,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(209,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(210,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(211,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(212,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(213,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(214,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(215,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(216,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(217,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(218,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(219,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(220,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(221,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(222,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(223,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(224,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(225,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(226,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(227,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(228,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(229,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(230,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(231,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(232,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(233,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(234,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(235,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(236,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(237,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(238,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(239,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(240,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(241,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(242,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(243,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(244,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(245,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(246,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(247,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(248,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(249,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(250,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(251,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);
	AddPlayerClass(253,1958.3783,1343.1572,15.3746,269.1425,0,0,24,300,-1,-1);

	//==================VEBICLES================================================

	AddStaticVehicle(520,366.0415,2538.3340,17.6872,183.8350,0,0); //
    AddStaticVehicle(519,405.1280,2452.5469,17.4190,0.0101,1,1); //
    AddStaticVehicle(447,425.6241,2516.1721,16.4954,87.0050,75,2); //
	AddStaticVehicle(447,425.3573,2509.5522,16.5045,90.1308,75,2); //
	AddStaticVehicle(447,425.8610,2500.8232,16.4913,85.8896,75,2); //
	AddStaticVehicle(447,426.4936,2492.5049,16.4838,93.4837,75,2); //
	AddStaticVehicle(520,382.6465,2537.8308,17.6169,171.1607,0,0); //
	AddStaticVehicle(425,350.4490,2537.8340,17.2992,179.6795,43,0); //
	AddStaticVehicle(411,313.4962,2470.1008,16.2014,26.7242,64,1); //
	AddStaticVehicle(451,319.3495,2470.6794,16.1862,27.7896,125,125); //
	AddStaticVehicle(506,325.2428,2471.5095,16.1866,33.1105,6,6); //
	AddStaticVehicle(522,308.2624,2470.7869,16.0391,20.1302,3,8); //
	AddStaticVehicle(581,328.5852,2473.2739,16.0773,34.3061,58,1); //
	AddStaticVehicle(425,324.6202,2537.5151,17.3782,180.9250,43,0); //
	AddStaticVehicle(432,290.0895,2544.3374,16.4077,179.0354,58,1); //
	AddStaticVehicle(497,2311.2717,2448.9849,10.9971,182.0678,0,1); //
	AddStaticVehicle(536,2652.2778,-2007.8057,13.1197,271.1905,26,96); //
	AddStaticVehicle(536,2659.4507,-2007.7926,13.1218,269.7287,30,96); //
	AddStaticVehicle(536,2666.3052,-2007.9055,13.1204,270.9456,32,1); //
	AddStaticVehicle(567,2652.7532,-2000.3402,13.2505,270.6967,90,96); //
	AddStaticVehicle(567,2659.8188,-2000.1957,13.2530,271.3932,93,64); //
	AddStaticVehicle(567,2666.6797,-2000.4316,13.2513,270.7483,97,96); //
	AddStaticVehicle(567,2645.8413,-2000.4296,13.2508,270.7481,90,96); //
	AddStaticVehicle(535,2672.2935,-2007.8090,13.1530,267.9534,55,1); //
	AddStaticVehicle(535,2673.0728,-2000.2375,13.1412,269.0995,66,1); //
	AddStaticVehicle(535,2678.9949,-2000.4087,13.1206,270.3442,118,1); //
	AddStaticVehicle(535,2678.1658,-2007.7205,13.1468,270.0744,3,1); //
	AddStaticVehicle(535,2684.3169,-2007.8250,13.1474,270.2281,28,1); //
	AddStaticVehicle(535,2684.9258,-2000.4427,13.1027,270.7458,31,1); //
 	AddStaticVehicle(411,-2347.8906,-1603.9780,483.3663,246.1892,123,1); //
	AddStaticVehicle(451,-2347.4175,-1599.7207,483.3254,256.3783,36,36); //
	AddStaticVehicle(411,-2345.2634,-1595.2837,483.3282,251.1321,116,1); //
	AddStaticVehicle(451,-2343.4617,-1590.7712,483.2860,244.1544,16,16); //
	AddStaticVehicle(481,-2339.3774,-1580.3976,483.0465,220.0616,12,9); //
	AddStaticVehicle(481,-2340.6121,-1581.5516,483.0446,219.3355,14,1); //
	AddStaticVehicle(481,-2338.4966,-1578.3619,483.0368,222.0364,26,1); //
	AddStaticVehicle(481,-2341.4861,-1583.6876,483.0534,229.3555,65,9); //
	AddStaticVehicle(522,-2351.2310,-1607.3608,483.1894,241.0901,51,118); //
	AddStaticVehicle(522,-2351.6592,-1609.8405,483.1888,243.4879,3,3); //
	AddStaticVehicle(522,-2352.2720,-1612.5487,483.2060,240.5841,3,8); //
	AddStaticVehicle(522,-2353.0728,-1615.5190,483.2085,250.2917,6,25); //
	AddStaticVehicle(571,-2330.4900,-1581.0868,482.9013,162.8342,36,2); //
	AddStaticVehicle(571,-2333.2278,-1579.9454,482.8680,163.4053,51,53); //
	AddStaticVehicle(571,-2327.6038,-1583.5770,482.9467,154.3000,91,2); //
	AddStaticVehicle(492,-2354.1851,-1628.3931,483.4617,254.2146,81,27); //
	AddStaticVehicle(492,-2353.3342,-1623.9581,483.4487,252.6448,24,55); //
	AddStaticVehicle(562,-2308.6177,-1602.7643,483.6122,145.3221,35,1); //
	AddStaticVehicle(562,-2312.2263,-1599.3323,483.5846,132.2758,17,1); //
	AddStaticVehicle(487,-2321.1279,-1592.7086,483.9674,133.1122,29,42); //
	AddStaticVehicle(541,-2353.3462,-1637.6542,483.3282,283.2458,58,8); //
	AddStaticVehicle(541,-2351.6057,-1642.3292,483.3279,290.2983,60,1); //
	AddStaticVehicle(559,-2303.2749,-1609.2953,483.5787,133.5266,58,8); //
	AddStaticVehicle(539,-2297.9604,-1617.4897,483.2076,129.5394,86,70); //
	AddStaticVehicle(539,-2300.8086,-1613.7977,483.2415,127.9526,79,74); //
	AddStaticVehicle(471,-2293.3418,-1622.6563,483.2839,127.0072,103,111); //
	AddStaticVehicle(471,-2291.2620,-1625.1855,483.2604,122.4646,120,114); //
	AddStaticVehicle(471,-2289.4502,-1627.7629,483.2364,112.6334,74,91); //
	AddStaticVehicle(522,1864.3550,-1394.6563,13.0614,275.1065,8,82); //
	AddStaticVehicle(522,1864.2023,-1392.2665,13.0548,275.2186,36,105); //
	AddStaticVehicle(522,1864.1808,-1396.5176,13.0540,271.6078,39,106); //
	AddStaticVehicle(522,1864.3108,-1398.0854,13.0540,269.3047,51,118); //
	AddStaticVehicle(522,1864.2659,-1400.0405,13.0502,267.6919,3,3); //
	AddStaticVehicle(481,1864.1084,-1402.5040,12.9938,271.3817,3,3); //
	AddStaticVehicle(481,1864.2068,-1403.9197,12.9922,267.8096,6,6); //
	AddStaticVehicle(481,1864.2295,-1405.3411,12.9912,267.2709,46,46); //
	AddStaticVehicle(510,1864.3813,-1409.0337,13.0865,267.0591,39,39); //
	AddStaticVehicle(510,1864.3284,-1410.9652,13.0958,268.5021,28,28); //
	AddStaticVehicle(510,1864.2291,-1407.4806,13.0837,276.1079,46,46); //
	AddStaticVehicle(451,2040.0520,1319.2799,10.3779,183.2439,16,16);
	AddStaticVehicle(429,2040.5247,1359.2783,10.3516,177.1306,13,13);
	AddStaticVehicle(421,2110.4102,1398.3672,10.7552,359.5964,13,13);
	AddStaticVehicle(411,2074.9624,1479.2120,10.3990,359.6861,64,64);
	AddStaticVehicle(477,2075.6038,1666.9750,10.4252,359.7507,94,94);
	AddStaticVehicle(541,2119.5845,1938.5969,10.2967,181.9064,22,22);
	AddStaticVehicle(541,1843.7881,1216.0122,10.4556,270.8793,60,1);
	AddStaticVehicle(402,1944.1003,1344.7717,8.9411,0.8168,30,30);
	AddStaticVehicle(402,1679.2278,1316.6287,10.6520,180.4150,90,90);
	AddStaticVehicle(415,1685.4872,1751.9667,10.5990,268.1183,25,1);
	AddStaticVehicle(411,2034.5016,1912.5874,11.9048,0.2909,123,1);
	AddStaticVehicle(411,2172.1682,1988.8643,10.5474,89.9151,116,1);
	AddStaticVehicle(429,2245.5759,2042.4166,10.5000,270.7350,14,14);
	AddStaticVehicle(477,2361.1538,1993.9761,10.4260,178.3929,101,1);
	AddStaticVehicle(550,2221.9946,1998.7787,9.6815,92.6188,53,53);
	AddStaticVehicle(558,2243.3833,1952.4221,14.9761,359.4796,116,1);
	AddStaticVehicle(587,2276.7085,1938.7263,31.5046,359.2321,40,1);
	AddStaticVehicle(587,2602.7769,1853.0667,10.5468,91.4813,43,1);
	AddStaticVehicle(603,2610.7600,1694.2588,10.6585,89.3303,69,1);
	AddStaticVehicle(587,2635.2419,1075.7726,10.5472,89.9571,53,1);
	AddStaticVehicle(562,2577.2354,1038.8063,10.4777,181.7069,35,1);
	AddStaticVehicle(562,2394.1021,989.4888,10.4806,89.5080,17,1);
	AddStaticVehicle(562,1881.0510,957.2120,10.4789,270.4388,11,1);
	AddStaticVehicle(535,2039.1257,1545.0879,10.3481,359.6690,123,1);
	AddStaticVehicle(535,2009.8782,2411.7524,10.5828,178.9618,66,1);
	AddStaticVehicle(429,2010.0841,2489.5510,10.5003,268.7720,1,2);
	AddStaticVehicle(415,2076.4033,2468.7947,10.5923,359.9186,36,1);
	AddStaticVehicle(487,2093.2754,2414.9421,74.7556,89.0247,26,57);
	AddStaticVehicle(506,2352.9026,2577.9768,10.5201,0.4091,7,7);
	AddStaticVehicle(506,2166.6963,2741.0413,10.5245,89.7816,52,52);
	AddStaticVehicle(411,1960.9989,2754.9072,10.5473,200.4316,112,1);
	AddStaticVehicle(429,1919.5863,2760.7595,10.5079,100.0753,2,1);
	AddStaticVehicle(415,1673.8038,2693.8044,10.5912,359.7903,40,1);
	AddStaticVehicle(402,1591.0482,2746.3982,10.6519,172.5125,30,30);
	AddStaticVehicle(603,1580.4537,2838.2886,10.6614,181.4573,75,77);
	AddStaticVehicle(550,1555.2734,2750.5261,10.6388,91.7773,62,62);
	AddStaticVehicle(535,1455.9305,2878.5288,10.5837,181.0987,118,1);
	AddStaticVehicle(477,1537.8425,2578.0525,10.5662,0.0650,121,1);
	AddStaticVehicle(451,1433.1594,2607.3762,10.3781,88.0013,16,16);
	AddStaticVehicle(603,2223.5898,1288.1464,10.5104,182.0297,18,1);
	AddStaticVehicle(558,2451.6707,1207.1179,10.4510,179.8960,24,1);
	AddStaticVehicle(550,2461.7253,1357.9705,10.6389,180.2927,62,62);
	AddStaticVehicle(558,2461.8162,1629.2268,10.4496,181.4625,117,1);
	AddStaticVehicle(477,2395.7554,1658.9591,10.5740,359.7374,0,1);
	AddStaticVehicle(404,1553.3696,1020.2884,10.5532,270.6825,119,50);
	AddStaticVehicle(400,1380.8304,1159.1782,10.9128,355.7117,123,1);
	AddStaticVehicle(418,1383.4630,1035.0420,10.9131,91.2515,117,227);
	AddStaticVehicle(404,1445.4526,974.2831,10.5534,1.6213,109,100);
	AddStaticVehicle(400,1704.2365,940.1490,10.9127,91.9048,113,1);
	AddStaticVehicle(404,1658.5463,1028.5432,10.5533,359.8419,101,101);
	AddStaticVehicle(581,1677.6628,1040.1930,10.4136,178.7038,58,1);
	AddStaticVehicle(581,1383.6959,1042.2114,10.4121,85.7269,66,1);
	AddStaticVehicle(581,1064.2332,1215.4158,10.4157,177.2942,72,1);
	AddStaticVehicle(581,1111.4536,1788.3893,10.4158,92.4627,72,1);
	AddStaticVehicle(522,953.2818,1806.1392,8.2188,235.0706,3,8);
	AddStaticVehicle(522,995.5328,1886.6055,10.5359,90.1048,3,8);
	AddStaticVehicle(521,993.7083,2267.4133,11.0315,1.5610,75,13);
	AddStaticVehicle(535,1439.5662,1999.9822,10.5843,0.4194,66,1);
	AddStaticVehicle(522,1430.2354,1999.0144,10.3896,352.0951,6,25);
	AddStaticVehicle(522,2156.3540,2188.6572,10.2414,22.6504,6,25);
	AddStaticVehicle(598,2277.6846,2477.1096,10.5652,180.1090,0,1);
	AddStaticVehicle(598,2268.9888,2443.1697,10.5662,181.8062,0,1);
	AddStaticVehicle(598,2256.2891,2458.5110,10.5680,358.7335,0,1);
	AddStaticVehicle(598,2251.6921,2477.0205,10.5671,179.5244,0,1);
	AddStaticVehicle(523,2294.7305,2441.2651,10.3860,9.3764,0,0);
	AddStaticVehicle(523,2290.7268,2441.3323,10.3944,16.4594,0,0);
	AddStaticVehicle(523,2295.5503,2455.9656,2.8444,272.6913,0,0);
	AddStaticVehicle(522,2476.7900,2532.2222,21.4416,0.5081,8,82);
	AddStaticVehicle(522,2580.5320,2267.9595,10.3917,271.2372,8,82);
	AddStaticVehicle(522,2814.4331,2364.6641,10.3907,89.6752,36,105);
	AddStaticVehicle(535,2827.4143,2345.6953,10.5768,270.0668,97,1);
	AddStaticVehicle(521,1670.1089,1297.8322,10.3864,359.4936,87,118);
	AddStaticVehicle(487,1614.7153,1548.7513,11.2749,347.1516,58,8);
	AddStaticVehicle(487,1647.7902,1538.9934,11.2433,51.8071,0,8);
	AddStaticVehicle(487,1608.3851,1630.7268,11.2840,174.5517,58,8);
	AddStaticVehicle(476,1283.0006,1324.8849,9.5332,275.0468,7,6); //11.5332
	AddStaticVehicle(476,1283.5107,1361.3171,9.5382,271.1684,1,6); //11.5382
	AddStaticVehicle(476,1283.6847,1386.5137,11.5300,272.1003,89,91);
	AddStaticVehicle(476,1288.0499,1403.6605,11.5295,243.5028,119,117);
	AddStaticVehicle(415,1319.1038,1279.1791,10.5931,0.9661,62,1);
	AddStaticVehicle(521,1710.5763,1805.9275,10.3911,176.5028,92,3);
	AddStaticVehicle(521,2805.1650,2027.0028,10.3920,357.5978,92,3);
	AddStaticVehicle(535,2822.3628,2240.3594,10.5812,89.7540,123,1);
	AddStaticVehicle(521,2876.8013,2326.8418,10.3914,267.8946,115,118);
	AddStaticVehicle(429,2842.0554,2637.0105,10.5000,182.2949,1,3);
	AddStaticVehicle(549,2494.4214,2813.9348,10.5172,316.9462,72,39);
	AddStaticVehicle(549,2327.6484,2787.7327,10.5174,179.5639,75,39);
	AddStaticVehicle(549,2142.6970,2806.6758,10.5176,89.8970,79,39);
	AddStaticVehicle(521,2139.7012,2799.2114,10.3917,229.6327,25,118);
	AddStaticVehicle(521,2104.9446,2658.1331,10.3834,82.2700,36,0);
	AddStaticVehicle(521,1914.2322,2148.2590,10.3906,267.7297,36,0);
	AddStaticVehicle(549,1904.7527,2157.4312,10.5175,183.7728,83,36);
	AddStaticVehicle(549,1532.6139,2258.0173,10.5176,359.1516,84,36);
	AddStaticVehicle(521,1534.3204,2202.8970,10.3644,4.9108,118,118);
	AddStaticVehicle(549,1613.1553,2200.2664,10.5176,89.6204,89,35);
	AddStaticVehicle(400,1552.1292,2341.7854,10.9126,274.0815,101,1);
	AddStaticVehicle(404,1637.6285,2329.8774,10.5538,89.6408,101,101);
	AddStaticVehicle(400,1357.4165,2259.7158,10.9126,269.5567,62,1);
	AddStaticVehicle(411,1281.7458,2571.6719,10.5472,270.6128,106,1);
	AddStaticVehicle(522,1305.5295,2528.3076,10.3955,88.7249,3,8);
	AddStaticVehicle(521,993.9020,2159.4194,10.3905,88.8805,74,74);
	AddStaticVehicle(415,1512.7134,787.6931,10.5921,359.5796,75,1);
	AddStaticVehicle(522,2299.5872,1469.7910,10.3815,258.4984,3,8);
	AddStaticVehicle(522,2133.6428,1012.8537,10.3789,87.1290,3,8);
	AddStaticVehicle(415,2266.7336,648.4756,11.0053,177.8517,0,1); //
	AddStaticVehicle(461,2404.6636,647.9255,10.7919,183.7688,53,1); //
	AddStaticVehicle(506,2628.1047,746.8704,10.5246,352.7574,3,3); //
	AddStaticVehicle(549,2817.6445,928.3469,10.4470,359.5235,72,39); //
	AddStaticVehicle(562,1919.8829,947.1886,10.4715,359.4453,11,1); //
	AddStaticVehicle(562,1881.6346,1006.7653,10.4783,86.9967,11,1); //
	AddStaticVehicle(562,2038.1044,1006.4022,10.4040,179.2641,11,1); //
	AddStaticVehicle(562,2038.1614,1014.8566,10.4057,179.8665,11,1); //
	AddStaticVehicle(562,2038.0966,1026.7987,10.4040,180.6107,11,1); //
	AddStaticVehicle(422,9.1065,1165.5066,19.5855,2.1281,101,25); //
	AddStaticVehicle(463,19.8059,1163.7103,19.1504,346.3326,11,11); //
	AddStaticVehicle(463,12.5740,1232.2848,18.8822,121.8670,22,22); //
	AddStaticVehicle(586,69.4633,1217.0189,18.3304,158.9345,10,1); //
	AddStaticVehicle(586,-199.4185,1223.0405,19.2624,176.7001,25,1); //
	AddStaticVehicle(576,384.2365,2602.1763,16.0926,192.4858,72,1); //
	AddStaticVehicle(586,423.8012,2541.6870,15.9708,338.2426,10,1); //
	AddStaticVehicle(586,-244.0047,2724.5439,62.2077,51.5825,10,1); //
	AddStaticVehicle(586,-311.1414,2659.4329,62.4513,310.9601,27,1); //
	AddStaticVehicle(543,596.8064,866.2578,-43.2617,186.8359,67,8); //
	AddStaticVehicle(543,835.0838,836.8370,11.8739,14.8920,8,90); //
	AddStaticVehicle(549,843.1893,838.8093,12.5177,18.2348,79,39); //
	AddStaticVehicle(400,-235.9767,1045.8623,19.8158,180.0806,75,1); //
	AddStaticVehicle(599,-211.5940,998.9857,19.8437,265.4935,0,1); //
	AddStaticVehicle(422,-304.0620,1024.1111,19.5714,94.1812,96,25); //
	AddStaticVehicle(588,-290.2229,1317.0276,54.1871,81.7529,1,1); //
	AddStaticVehicle(451,-290.3145,1567.1534,75.0654,133.1694,61,61); //
	AddStaticVehicle(470,280.4914,1945.6143,17.6317,310.3278,43,0); //
	AddStaticVehicle(470,272.2862,1949.4713,17.6367,285.9714,43,0); //
	AddStaticVehicle(470,271.6122,1961.2386,17.6373,251.9081,43,0); //
	AddStaticVehicle(470,279.8705,1966.2362,17.6436,228.4709,43,0); //
	AddStaticVehicle(433,277.6437,1985.7559,18.0772,270.4079,43,0); //
	AddStaticVehicle(433,277.4477,1994.8329,18.0773,267.7378,43,0); //
	AddStaticVehicle(568,-441.3438,2215.7026,42.2489,191.7953,41,29); //
	AddStaticVehicle(568,-422.2956,2225.2612,42.2465,0.0616,41,29); //
	AddStaticVehicle(568,-371.7973,2234.5527,42.3497,285.9481,41,29); //
	AddStaticVehicle(568,-360.1159,2203.4272,42.3039,113.6446,41,29); //
	AddStaticVehicle(468,-660.7385,2315.2642,138.3866,358.7643,6,6); //
	AddStaticVehicle(460,-1029.2648,2237.2217,42.2679,260.5732,1,3); //
	AddStaticVehicle(419,95.0568,1056.5530,13.4068,192.1461,13,76); //
	AddStaticVehicle(429,114.7416,1048.3517,13.2890,174.9752,1,2); //
	AddStaticVehicle(411,-290.0065,1759.4958,42.4154,89.7571,116,1); //
	AddStaticVehicle(522,-302.5649,1777.7349,42.2514,238.5039,6,25); //
	AddStaticVehicle(522,-302.9650,1776.1152,42.2588,239.9874,8,82); //
	AddStaticVehicle(533,-301.0404,1750.8517,42.3966,268.7585,75,1); //
	AddStaticVehicle(535,-866.1774,1557.2700,23.8319,269.3263,31,1); //
	AddStaticVehicle(550,-799.3062,1518.1556,26.7488,88.5295,53,53); //
	AddStaticVehicle(521,-749.9730,1589.8435,26.5311,125.6508,92,3); //
	AddStaticVehicle(522,-867.8612,1544.5282,22.5419,296.0923,3,3); //
	AddStaticVehicle(554,-904.2978,1553.8269,25.9229,266.6985,34,30); //
	AddStaticVehicle(521,-944.2642,1424.1603,29.6783,148.5582,92,3); //
	AddStaticVehicle(429,-237.7157,2594.8804,62.3828,178.6802,1,2); //
	AddStaticVehicle(463,-196.3012,2774.4395,61.4775,303.8402,22,22); //
	AddStaticVehicle(519,-1341.1079,-254.3787,15.0701,321.6338,1,1); //
	AddStaticVehicle(519,-1371.1775,-232.3967,15.0676,315.6091,1,1); //
	AddStaticVehicle(519,1642.9850,-2425.2063,14.4744,159.8745,1,1); //
	AddStaticVehicle(519,1734.1311,-2426.7563,14.4734,172.2036,1,1); //
	AddStaticVehicle(415,-680.9882,955.4495,11.9032,84.2754,36,1); //
	AddStaticVehicle(460,-816.3951,2222.7375,43.0045,268.1861,1,3); //
	AddStaticVehicle(460,-94.6885,455.4018,1.5719,250.5473,1,3); //
	AddStaticVehicle(460,1624.5901,565.8568,1.7817,200.5292,1,3); //
	AddStaticVehicle(460,1639.3567,572.2720,1.5311,206.6160,1,3); //
	AddStaticVehicle(460,2293.4219,517.5514,1.7537,270.7889,1,3); //
	AddStaticVehicle(460,2354.4690,518.5284,1.7450,270.2214,1,3); //
	AddStaticVehicle(460,772.4293,2912.5579,1.0753,69.6706,1,3); //
	AddStaticVehicle(560,2133.0769,1019.2366,10.5259,90.5265,9,39); //
	AddStaticVehicle(560,2142.4023,1408.5675,10.5258,0.3660,17,1); //
	AddStaticVehicle(560,2196.3340,1856.8469,10.5257,179.8070,21,1); //
	AddStaticVehicle(560,2103.4146,2069.1514,10.5249,270.1451,33,0); //
	AddStaticVehicle(560,2361.8042,2210.9951,10.3848,178.7366,37,0); //
	AddStaticVehicle(560,-1993.2465,241.5329,34.8774,310.0117,41,29); //
	AddStaticVehicle(559,-1989.3235,270.1447,34.8321,88.6822,58,8); //
	AddStaticVehicle(559,-1946.2416,273.2482,35.1302,126.4200,60,1); //
	AddStaticVehicle(558,-1956.8257,271.4941,35.0984,71.7499,24,1); //
	AddStaticVehicle(562,-1952.8894,258.8604,40.7082,51.7172,17,1); //
	AddStaticVehicle(411,-1949.8689,266.5759,40.7776,216.4882,112,1); //
	AddStaticVehicle(429,-1988.0347,305.4242,34.8553,87.0725,2,1); //
	AddStaticVehicle(559,-1657.6660,1213.6195,6.9062,282.6953,13,8); //
	AddStaticVehicle(560,-1658.3722,1213.2236,13.3806,37.9052,52,39); //
	AddStaticVehicle(558,-1660.8994,1210.7589,20.7875,317.6098,36,1); //
	AddStaticVehicle(550,-1645.2401,1303.9883,6.8482,133.6013,7,7); //
	AddStaticVehicle(460,-1333.1960,903.7660,1.5568,0.5095,46,32); //
	AddStaticVehicle(411,113.8611,1068.6182,13.3395,177.1330,116,1); //
	AddStaticVehicle(429,159.5199,1185.1160,14.7324,85.5769,1,2); //
	AddStaticVehicle(411,612.4678,1694.4126,6.7192,302.5539,75,1); //
	AddStaticVehicle(522,661.7609,1720.9894,6.5641,19.1231,6,25); //
	AddStaticVehicle(522,660.0554,1719.1187,6.5642,12.7699,8,82); //
	AddStaticVehicle(567,711.4207,1947.5208,5.4056,179.3810,90,96); //
	AddStaticVehicle(567,1031.8435,1920.3726,11.3369,89.4978,97,96); //
	AddStaticVehicle(567,1112.3754,1747.8737,10.6923,270.9278,102,114); //
	AddStaticVehicle(567,1641.6802,1299.2113,10.6869,271.4891,97,96); //
	AddStaticVehicle(567,2135.8757,1408.4512,10.6867,180.4562,90,96); //
	AddStaticVehicle(567,2262.2639,1469.2202,14.9177,91.1919,99,81); //
	AddStaticVehicle(567,2461.7380,1345.5385,10.6975,0.9317,114,1); //
	AddStaticVehicle(567,2804.4365,1332.5348,10.6283,271.7682,88,64); //
	AddStaticVehicle(560,2805.1685,1361.4004,10.4548,270.2340,17,1); //
	AddStaticVehicle(506,2853.5378,1361.4677,10.5149,269.6648,7,7); //
	AddStaticVehicle(567,2633.9832,2205.7061,10.6868,180.0076,93,64); //
	AddStaticVehicle(567,2119.9751,2049.3127,10.5423,180.1963,93,64); //
	AddStaticVehicle(567,2785.0261,-1835.0374,9.6874,226.9852,93,64); //
	AddStaticVehicle(567,2787.8975,-1876.2583,9.6966,0.5804,99,81); //
	AddStaticVehicle(411,2771.2993,-1841.5620,9.4870,20.7678,116,1); //
	AddStaticVehicle(538,-1942.2112,178.3404,27.0006,356.4421,1,1); // train
	AddStaticVehicle(449,-2006.5000,189.5145,27.9973,0.0000,1,74); // tram

	/*DRIFT CARS*/
	AddStaticVehicle(411,-2416.7480,-588.9477,132.3755,214.2293,80,1); //
	AddStaticVehicle(451,-2414.4570,-586.9308,132.3549,213.4217,75,75); //
	AddStaticVehicle(541,-2411.5615,-585.3527,132.2735,214.5144,13,8); //
	AddStaticVehicle(562,-2409.4336,-583.1887,132.3082,214.8024,116,1); //
	AddStaticVehicle(541,-272.3915,1550.4921,74.9844,134.0755,22,1); //
	AddStaticVehicle(451,-269.8669,1548.0470,75.0654,135.1419,123,123); //
	AddStaticVehicle(411,-267.3972,1545.5297,75.0865,134.2359,75,1); //
	AddStaticVehicle(562,-265.0099,1543.0531,75.0186,133.5375,113,1); //
	AddStaticVehicle(411,2312.4329,1388.0657,42.5474,358.6003,12,1); //
	AddStaticVehicle(451,2309.0374,1388.1631,42.5269,359.6085,125,125); //
	AddStaticVehicle(562,2305.6572,1388.0284,42.4793,359.1806,101,1); //
	AddStaticVehicle(541,2302.2800,1387.9668,42.4453,358.6005,36,8); //

	AddStaticPickup(371, 15, 1710.3359,1614.3585,10.1191); //para
	AddStaticPickup(371, 15, 1964.4523,1917.0341,130.9375); //para
	AddStaticPickup(371, 15, 2055.7258,2395.8589,150.4766); //para
	AddStaticPickup(371, 15, 2265.0120,1672.3837,94.9219); //para
	AddStaticPickup(371, 15, 2265.9739,1623.4060,94.9219); //para

	//STUNT 1
	AddStaticVehicle(449,-2006.5000,189.5145,27.9973,0.0000,1,74); //
	AddStaticVehicle(481,2115.1772,-2561.4214,13.0627,94.0443,12,9); //
	AddStaticVehicle(481,2115.3418,-2558.1292,13.0693,89.1246,14,1); //
	AddStaticVehicle(481,2115.5940,-2554.6604,13.0684,92.5064,65,9); //
	AddStaticVehicle(481,2115.4023,-2552.0146,13.0695,95.1691,46,46); //
	AddStaticVehicle(522,2115.5403,-2548.9641,13.1142,97.8840,3,3); //
	AddStaticVehicle(522,2115.4495,-2545.8511,13.1019,91.4091,51,118); //
	AddStaticVehicle(522,2115.8274,-2542.4565,13.1019,87.5351,39,106); //
	AddStaticVehicle(522,2115.7764,-2539.4397,13.1081,89.5239,36,105); //
	AddStaticVehicle(522,2115.4622,-2535.8977,13.1148,85.1225,8,82); //
	AddStaticVehicle(411,2084.9255,-2576.9983,13.2875,268.9858,112,1); //
	AddStaticVehicle(411,2084.8135,-2573.9243,13.2788,271.3079,106,1); //
	AddStaticVehicle(411,2084.7781,-2570.7000,13.2787,269.7242,80,1); //
	AddStaticVehicle(451,2084.8835,-2567.4170,13.2610,270.6310,18,18); //
	AddStaticVehicle(451,2084.8899,-2564.3689,13.2580,270.6467,46,46); //
	AddStaticVehicle(451,2084.9839,-2561.2148,13.2583,272.6458,61,61); //
	AddStaticVehicle(506,2084.9587,-2557.9707,13.2562,271.2305,6,6); //
	AddStaticVehicle(506,2084.6738,-2554.6704,13.2562,268.7072,7,7); //
	AddStaticVehicle(541,2084.4292,-2551.4539,13.1766,272.3961,60,1); //
	AddStaticVehicle(541,2084.6177,-2548.2029,13.1765,269.5797,68,8); //
	AddStaticVehicle(571,2105.6636,-2599.4912,12.8359,1.9915,51,53); //
	AddStaticVehicle(571,2102.7981,-2599.5598,12.8354,358.0534,91,2); //
	AddStaticVehicle(571,2099.8701,-2599.7300,12.8355,1.1496,11,22); //

	//STUNT 2
	AddStaticVehicle(411,4392.4849,-1858.4509,3.7906+3,176.5719,75,1); //
	AddStaticVehicle(411,4398.0571,-1858.2703,3.7975+3,177.4017,12,1); //
	AddStaticVehicle(411,4403.0850,-1858.0035,3.7976+3,175.9236,64,1); //
	AddStaticVehicle(411,4408.1221,-1858.7195,3.8001+3,180.1263,123,1); //
	AddStaticVehicle(451,4415.3750,-1858.4806,3.7722+3,174.8604,75,75); //
	AddStaticVehicle(451,4419.3896,-1858.2563,3.7672+3,180.0859,123,123); //
	AddStaticVehicle(451,4420.1416,-1872.8867,3.7612+3,88.2679,125,125); //
	AddStaticVehicle(451,4420.2393,-1868.6033,3.7614+3,91.4906,36,36); //
	AddStaticVehicle(522,4420.1299,-1879.1698,3.6193+3,90.5627,8,82); //
	AddStaticVehicle(522,4420.2451,-1881.3602,3.6179+3,93.6723,7,79); //
	AddStaticVehicle(522,4420.4229,-1883.9290,3.6199+3,96.6994,6,25); //
	AddStaticVehicle(522,4420.2603,-1886.6251,3.6176+3,85.3556,3,8); //
	AddStaticVehicle(522,4420.2417,-1889.7557,3.6137+3,84.8422,36,105); //
	AddStaticVehicle(522,4420.6255,-1892.6935,3.6165+3,92.8707,39,106); //
	AddStaticVehicle(522,4420.4209,-1895.4199,3.6175+3,89.2252,51,118); //
	AddStaticVehicle(481,4412.1851,-1895.9113,3.5705+3,3.9644,12,9); //
	AddStaticVehicle(481,4410.0298,-1895.8910,3.5700+3,5.0759,26,1); //
	AddStaticVehicle(481,4407.4185,-1895.8180,3.5722+3,2.8740,1,1); //
	AddStaticVehicle(481,4404.7734,-1895.7605,3.5703+3,3.2657,65,9); //
	AddStaticVehicle(481,4402.2871,-1895.8810,3.5699+3,9.3714,46,46); //
	AddStaticVehicle(481,4399.5977,-1895.7927,3.5697+3,2.9410,14,1); //
	AddStaticVehicle(423,4385.4556,-1858.8981,4.0791+3,177.4094,1,56); //
	AddStaticVehicle(409,4390.5459,-1894.0000,3.8547+3,271.1631,1,1); //

	//PICKUPS
	AddStaticPickup(361,2,290.2740,2438.9209,16.7330); //flamethrower
	AddStaticPickup(359,2,276.5111,2407.1470,17.1842); //rpg
	AddStaticPickup(343,2,197.3802,2434.9812,17.0279); //teargas
	AddStaticPickup(341,2,315.4282,2413.3140,17.5562); //chainsaw
	AddStaticPickup(350,2,357.8974,2434.5264,17.1019); //sawn offs
	AddStaticPickup(325,2,249.7672,2433.9465,17.1772); //flowers
	AddStaticPickup(344,2,154.5461,2413.8477,17.5345); //molotovs
	AddStaticPickup(338,2,115.8691,2407.3396,17.1308); //pool stick
	AddStaticPickup(323,2,129.3928,2440.8716,16.7495); //vibe
	AddStaticPickup(370,2,-2432.8110,-1620.2461,526.6684);
	AddStaticPickup(46,2,-2237.8320,-1715.6703,480.8658);
	AddStaticPickup(46,2,-2236.1543,-1725.1636,480.8580);

	//SKY DM
	CreateObject(983, 2660.423584, -1454.161011, 78.364052, 0, 90.2408, 0.8594);

	//CHILIAD
	CreateObject(1634, -2230.236816, -1740.337158, 480.862885, 0, 0, 240.6424);
	CreateObject(1634, -2232.101074, -1743.758179, 480.882538, 0, 0, 240.6424);
	CreateObject(1634, -2228.353027, -1736.927368, 480.848511, 0, 0, 240.6424);
	CreateObject(1634, -2233.775391, -1745.879761, 480.859070, 0, 0, 221.7348);
	CreateObject(1634, -2236.756592, -1748.034912, 480.816803, 0, 0, 213.1404);
	CreateObject(1634, -2239.764404, -1749.679443, 480.859283, 0, 0, 201.1082);
	CreateObject(12922, -2290.961914, -1704.058716, 479.957123, 0, 359.1406, 14.6104);

	//AREA51
	AddStaticVehicle(432,277.1764,2023.4065,17.6559,271.9031,43,0); //
	AddStaticVehicle(432,313.4593,2052.1016,17.6414,179.9224,43,0); //
	AddStaticVehicle(425,315.0687,2017.2795,18.3278,93.8657,43,0); //
	AddStaticVehicle(425,314.7212,2007.4884,18.2058,94.0131,43,0); //
	AddStaticVehicle(425,315.3892,1996.5673,18.1899,92.7182,43,0); //
	AddStaticVehicle(520,315.9317,1984.8577,18.3639,93.8247,0,0); //
	AddStaticVehicle(520,315.8412,1973.6829,18.3639,98.9992,0,0); //
	AddStaticVehicle(520,312.4378,1960.0974,18.3639,91.6689,0,0); //
	AddStaticVehicle(520,315.2693,1944.7413,18.3639,92.8093,0,0); //

	//HELIDM
/*	AddStaticVehicle(520,366.0415,2538.3340,17.6872,183.8350,0,0); //
    AddStaticVehicle(519,405.1280,2452.5469,17.4190,0.0101,1,1); //
    AddStaticVehicle(447,425.6241,2516.1721,16.4954,87.0050,75,2); //
	AddStaticVehicle(447,425.3573,2509.5522,16.5045,90.1308,75,2); //
	AddStaticVehicle(447,425.8610,2500.8232,16.4913,85.8896,75,2); //
	AddStaticVehicle(447,426.4936,2492.5049,16.4838,93.4837,75,2); //
	AddStaticVehicle(520,382.6465,2537.8308,17.6169,171.1607,0,0); //
	AddStaticVehicle(425,350.4490,2537.8340,17.2992,179.6795,43,0); //
	AddStaticVehicle(411,313.4962,2470.1008,16.2014,26.7242,64,1); //
	AddStaticVehicle(451,319.3495,2470.6794,16.1862,27.7896,125,125); //
	AddStaticVehicle(506,325.2428,2471.5095,16.1866,33.1105,6,6); //
	AddStaticVehicle(522,308.2624,2470.7869,16.0391,20.1302,3,8); //
	AddStaticVehicle(581,328.5852,2473.2739,16.0773,34.3061,58,1); //
	AddStaticVehicle(425,324.6202,2537.5151,17.3782,180.9250,43,0); //
	AddStaticVehicle(432,290.0895,2544.3374,16.4077,179.0354,58,1); */

	ks1=CreateVehicle(522,-1416.8005,1608.9404,1052.1000,0,39,106, 1500); // ks1
	ks2=CreateVehicle(522,-1420.2621,1608.3030,1052.1047,0,36,105,1500); // ks2
	ks3=CreateVehicle(522,-1423.6068,1609.1442,1052.0989,0,51,118, 1500); // ks3
	ks4=CreateVehicle(522,-1426.5107,1612.3488,1052.1016,0,3,3, 1500); // ks4
	ks5=CreateVehicle(522,-1427.6644,1616.1102,1052.1021,0,3,8, 1500); // ks5
	ks6=CreateVehicle(468,-1413.8246,1610.7946,1052.2007,0,46,46, 1500); // ks6
	ks7=CreateVehicle(468,-1411.5148,1613.9679,1052.2000,0,53,53, 1500); // ks7
	ks8=CreateVehicle(468,-1411.3656,1617.7286,1052.2001,0,3,3, 1500); // ks8
	ks9=CreateVehicle(468,-1413.3158,1621.5321,1052.2001,0,6,6, 1500); // ks9
	ks10=CreateVehicle(481,-1416.1617,1623.3656,1052.0486,0,1,1, 1500); // ks10
	ks11=CreateVehicle(481,-1419.3999,1624.1083,1052.0459,0,3,3, 1500); // ks11
	ks12=CreateVehicle(510,-1422.9875,1623.1587,1052.1381,0,16,16, 1500); // ks12
	ks13=CreateVehicle(510,-1425.9899,1620.3702,1052.1398,0,6,6, 1500); // ks13
	LinkVehicleToInterior(ks1,14);
	LinkVehicleToInterior(ks2,14);
	LinkVehicleToInterior(ks3,14);
	LinkVehicleToInterior(ks4,14);
	LinkVehicleToInterior(ks5,14);
	LinkVehicleToInterior(ks6,14);
	LinkVehicleToInterior(ks7,14);
	LinkVehicleToInterior(ks8,14);
	LinkVehicleToInterior(ks9,14);
	LinkVehicleToInterior(ks10,14);
	LinkVehicleToInterior(ks11,14);
	LinkVehicleToInterior(ks12,14);
	LinkVehicleToInterior(ks13,14);

	br1=AddStaticVehicle(504,-1375.7522,936.3997,1036.2087,270.0042,57,38);
	br2=AddStaticVehicle(504,-1390.5319,936.1339,1036.2247,270.8360,45,29);
	br3=AddStaticVehicle(504,-1402.5592,936.6257,1036.2555,269.9059,34,9);
	br4=AddStaticVehicle(504,-1416.6028,936.1755,1036.2662,271.4232,65,9);
	br5=AddStaticVehicle(504,-1433.2852,937.3679,1036.3192,264.7370,14,1);
	br6=AddStaticVehicle(504,-1452.2583,940.2871,1036.4072,255.7019,12,9);
	br7=AddStaticVehicle(504,-1467.7141,945.8399,1036.5321,244.7524,26,1);
	br8=AddStaticVehicle(504,-1475.9928,948.7097,1036.5880,243.0009,51,39);
	br9=AddStaticVehicle(504,-1489.9742,949.0530,1036.6283,240.5122,57,38);
	br10=AddStaticVehicle(504,-1499.7640,956.4848,1036.7740,228.6482,45,29);
	br11=AddStaticVehicle(504,-1507.0188,963.7161,1036.9076,221.3763,34,9);
	br12=AddStaticVehicle(504,-1361.3069,932.2126,1036.1146,281.5844,34,9);
	br13=AddStaticVehicle(504,-1350.3754,933.7695,1036.1323,282.2141,65,9);
	br14=AddStaticVehicle(504,-1340.8667,935.7695,1036.1473,286.5033,14,1);
	LinkVehicleToInterior(br1,15);
	LinkVehicleToInterior(br2,15);
	LinkVehicleToInterior(br3,15);
	LinkVehicleToInterior(br4,15);
	LinkVehicleToInterior(br5,15);
	LinkVehicleToInterior(br6,15);
	LinkVehicleToInterior(br7,15);
	LinkVehicleToInterior(br8,15);
	LinkVehicleToInterior(br9,15);
	LinkVehicleToInterior(br10,15);
	LinkVehicleToInterior(br11,15);
	LinkVehicleToInterior(br12,15);
	LinkVehicleToInterior(br13,15);
	LinkVehicleToInterior(br14,15);

	//MENUS
	shop = CreateMenu("~b~Shop", 2, 400.0, 290.0, 140.0, 150.0);
	AddMenuItem(shop, 0, "Heavy Weapons");
	AddMenuItem(shop, 0, "Life");
	AddMenuItem(shop, 0, "RC Cars");
	AddMenuItem(shop, 0, "Exit");
	shopweps = CreateMenu("~r~Heavy Weapons", 2, 400.0, 270.0, 120.0, 150.0);
	AddMenuItem(shopweps, 0, "Grenade");
	AddMenuItem(shopweps, 0, "Molotov Cocktail");
	AddMenuItem(shopweps, 0, "Sniper");
	AddMenuItem(shopweps, 0, "RPG");
	AddMenuItem(shopweps, 0, "Flamethrower");
	AddMenuItem(shopweps, 0, "Back");
	AddMenuItem(shopweps, 1, "$2,000");
	AddMenuItem(shopweps, 1, "$2,000");
	AddMenuItem(shopweps, 1, "$2,500");
	AddMenuItem(shopweps, 1, "$3,500");
	AddMenuItem(shopweps, 1, "$3,000");
	shoplife = CreateMenu("~g~Life", 2, 400.0, 290.0, 120.0, 150.0);
	AddMenuItem(shoplife, 0, "Health");
	AddMenuItem(shoplife, 0, "Armour");
	AddMenuItem(shoplife, 1, "$200");
	AddMenuItem(shoplife, 1, "$300");
	AddMenuItem(shoplife, 0, "Back");
	shoprc = CreateMenu("~g~RC Cars", 2, 400.0, 290.0, 120.0, 150.0);
	AddMenuItem(shoprc, 0, "RC Bandit");
	AddMenuItem(shoprc, 0, "RC Baron");
	AddMenuItem(shoprc, 0, "RC Heli");
	AddMenuItem(shoprc, 0, "RC Tank");
	AddMenuItem(shoprc, 1, "$200");
	AddMenuItem(shoprc, 1, "$200");
    AddMenuItem(shoprc, 1, "$200");
    AddMenuItem(shoprc, 1, "$200");
	AddMenuItem(shoprc, 0, "Back");

	vshop = CreateMenu("~b~Vehicles", 2, 400.0, 290.0, 140.0, 150.0);
	AddMenuItem(vshop, 0, "Cars");
	AddMenuItem(vshop, 0, "Planes");
	AddMenuItem(vshop, 0, "Bikes");
	AddMenuItem(vshop, 0, "Low Riders");
	AddMenuItem(vshop, 0, "Off Road");
	AddMenuItem(vshop, 0, "Exit");
	cars = CreateMenu("~b~Cars", 2, 400.0, 280.0, 140.0, 150.0);
	AddMenuItem(cars, 0, "Infernus");
	AddMenuItem(cars, 1, "$30000");
	AddMenuItem(cars, 0, "Turismo");
	AddMenuItem(cars, 1, "$30000");
	AddMenuItem(cars, 0, "Super GT");
	AddMenuItem(cars, 1, "$30000");
	AddMenuItem(cars, 0, "Jester");
	AddMenuItem(cars, 1, "$30000");
	AddMenuItem(cars, 0, "Cheetah");
	AddMenuItem(cars, 1, "$20000");
	AddMenuItem(cars, 0, "Bullet");
	AddMenuItem(cars, 1, "$20000");
	AddMenuItem(cars, 0, "Banshee");
	AddMenuItem(cars, 1, "$15000");
	AddMenuItem(cars, 0, "Flash");
	AddMenuItem(cars, 1, "$15000");
	AddMenuItem(cars, 0, "Back");
	planes = CreateMenu("~b~Planes", 2, 400.0, 230.0, 140.0, 150.0);
	AddMenuItem(planes, 0, "Andromada");
	AddMenuItem(planes, 1, "$40000");
	AddMenuItem(planes, 0, "AT-400");
	AddMenuItem(planes, 1, "$40000");
	AddMenuItem(planes, 0, "Rustler");
	AddMenuItem(planes, 1, "$35000");
	AddMenuItem(planes, 0, "Shamal");
	AddMenuItem(planes, 1, "$35000");
	AddMenuItem(planes, 0, "Beagle");
	AddMenuItem(planes, 1, "$30000");
	AddMenuItem(planes, 0, "Dodo");
	AddMenuItem(planes, 1, "$20000");
	AddMenuItem(planes, 0, "Skimmer");
	AddMenuItem(planes, 1, "$20000");
	AddMenuItem(planes, 0, "Stunt Plane");
	AddMenuItem(planes, 1, "$20000");
	AddMenuItem(planes, 0, "Maverick");
	AddMenuItem(planes, 1, "$10000");
	AddMenuItem(planes, 0, "Sparrow");
	AddMenuItem(planes, 1, "$10000");
	AddMenuItem(planes, 0, "Back");
	bikes = CreateMenu("~b~Bikes", 2, 400.0, 230.0, 140.0, 150.0);
	AddMenuItem(bikes, 0, "NRG-500");
	AddMenuItem(bikes, 1, "$20000");
	AddMenuItem(bikes, 0, "PCJ-600");
	AddMenuItem(bikes, 1, "$20000");
	AddMenuItem(bikes, 0, "FCR-900");
	AddMenuItem(bikes, 1, "$20000");
	AddMenuItem(bikes, 0, "BF-500");
	AddMenuItem(bikes, 1, "$15000");
	AddMenuItem(bikes, 0, "Sanchez");
	AddMenuItem(bikes, 1, "$10000");
	AddMenuItem(bikes, 0, "Quad");
	AddMenuItem(bikes, 1, "$5000");
	AddMenuItem(bikes, 0, "BMX Bike");
	AddMenuItem(bikes, 1, "$1000");
	AddMenuItem(bikes, 0, "Bike");
	AddMenuItem(bikes, 1, "$1000");
	AddMenuItem(bikes, 0, "Mntn Bike");
	AddMenuItem(bikes, 1, "$1000");
	AddMenuItem(bikes, 0, "Back");
	lowrider = CreateMenu("~b~Low Riders", 2, 400.0, 290.0, 140.0, 150.0);
	AddMenuItem(lowrider, 0, "Savanna");
	AddMenuItem(lowrider, 1, "$20000");
	AddMenuItem(lowrider, 0, "Remington");
	AddMenuItem(lowrider, 1, "$20000");
	AddMenuItem(lowrider, 0, "Blade");
	AddMenuItem(lowrider, 1, "$20000");
	AddMenuItem(lowrider, 0, "Slamvan");
	AddMenuItem(lowrider, 1, "$20000");
	AddMenuItem(lowrider, 0, "Back");
	offroad = CreateMenu("~b~Off Road", 2, 400.0, 290.0, 140.0, 150.0);
	AddMenuItem(offroad, 0, "Bandito");
	AddMenuItem(offroad, 1, "$10000");
	AddMenuItem(offroad, 0, "BF-Injection");
	AddMenuItem(offroad, 1, "$10000");
	AddMenuItem(offroad, 0, "Monster Truck");
	AddMenuItem(offroad, 1, "$10000");
	AddMenuItem(offroad, 0, "Sandking");
	AddMenuItem(offroad, 1, "$10000");
	AddMenuItem(offroad, 0, "Back");

	randhid = random(sizeof(gHiddenSpawns));
	pu = CreatePickup(1550,3,gHiddenSpawns[randhid][0],gHiddenSpawns[randhid][1],gHiddenSpawns[randhid][2]);
	return 1;
}

public OnGameModeExit()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
    		PlayerPlaySound(i,1063,2323.6938,1283.1810,97.6072);
		}
	}
	return 1;
}

public Update()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if (PLAYERLIST_authed[i])
			{
				GetPlayerPos(i,x,y,z);
			    dUserSetINT(PlayerName(i)).("skin",GetPlayerSkin(i));
                dUserSetINT(PlayerName(i)).("money",GetPlayerMoney(i));
		     	dUserSetINT(PlayerName(i)).("x",floatround(x));
		     	dUserSetINT(PlayerName(i)).("y",floatround(y));
		     	dUserSetINT(PlayerName(i)).("z",floatround(z));
		     	dUserSetINT(PlayerName(i)).("owncar",owncar[i]);
			}
		}
	}
	return 1;
}

public BotText()
{
	new rand = random(sizeof(gRandBotText));
	SendClientMessageToAll(COLOR_CA,gRandBotText[rand][0]);
	return 1;
}

stock SystemMsg(playerid,msg[]) {
   if ((IsPlayerConnected(playerid))&&(strlen(msg)>0)) {
       SendClientMessage(playerid,COLOR_SYSTEM,msg);
   }
   return 1;
}

stock PlayerName(playerid) {
  new name[24];
  GetPlayerName(playerid, name, sizeof(name));
  return name;
}

public SetPlayerRandomSpawn(playerid)
{
	new rand = random(sizeof(gStealthSpawns));
	SetPlayerPos(playerid, gStealthSpawns[rand][0], gStealthSpawns[rand][1], gStealthSpawns[rand][2]);
	return 1;
}

public SetPlayerRandomSpawn2(playerid)
{
	new rand = random(sizeof(gFuelSpawns));
	SetPlayerPos(playerid, gFuelSpawns[rand][0], gFuelSpawns[rand][1], gFuelSpawns[rand][2]);
	return 1;
}

public SetPlayerRandomSpawn3(playerid)
{
	new rand = random(sizeof(gSkyPlayerSpawns));
	SetPlayerPos(playerid, gSkyPlayerSpawns[rand][0], gSkyPlayerSpawns[rand][1], gSkyPlayerSpawns[rand][2]);
	return 1;
}

public Clock()
{
	clock();
	return 1;
}

public SellCarCount()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
 		{
  			if(cartime[pid[i]] == 1)
    		{
				carcd[pid[i]]--;
				if(carcd[pid[i]] == 0)
				{
   					KillTimer(cart[pid[i]]);
			    	cartime[pid[i]] = 0;
				}
			}
		}
	}
	return 1;
}

public GodMode()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(ingod[i] == 1)
	        {
	            SetPlayerHealth(i,2000);
			}
		}
	}
	return 1;
}

public GodCarMode()
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(ingodcar[i] == 1)
	        {
	            SetVehicleHealth(godv,3000);
			}
		}
	}
	return 1;
}

public UpdateScoreMoney()
{
	for(new i;i<MAX_PLAYERS;i++)
	{
 		SetPlayerScore(i,GetPlayerMoney(i));
	}
	return 1;
}

public Delay()
{
	delaycd--;
	if(delaycd > 0)
	{
	    for(new i=0; i<MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
		    {
		        if(PLAYERLIST_authed[i])
		        {
	    			dUserSetINT(PlayerName(i)).("skin",GetPlayerSkin(i));
				}
			}
		}
	} else if(delaycd == 0) {
	    KillTimer(delayt);
		GameModeExit();
	}
	return 1;
}

public MinigunCheck()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
	    {
			if(!PlayerToPoint(500, i,246.1008,79.3100,1003.6406))
			{
			    if(GetPlayerWeapon(i) == 38)
			    {
			        if(pid[i] == i)
			        {
						ResetPlayerWeapons(i);
						SendClientMessage(i,COLOR_RED,"Miniguns are not allowed outside of the Minigun Deathmatch");
	 				}
				}
			}
		}
	}
	return 1;
}

public StealthCheck()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
	    {
			if(!PlayerToPoint(1000, i,246.7068,118.5375,1003.2188))
			{
   				if(pid[i] == i)
       			{
	    			if(stealth[i] == 1)
		    		{
				    	if((strfind(PlayerName(i), "NegroCollegeFund", true) != -1)) {
							SetPlayerColor(i,COLOR_TRUEPINK);
						} else if(lvl1[i] == 1) {
			 				SetPlayerColor(i, COLOR_ORANGE);
				    	} else if(lvlf[i] == 1) {
			 				SetPlayerColor(i, COLOR_CA);
				    	} else if(PLAYERLIST_authed[i]) {
			 				SetPlayerColor(i, COLOR_GREEN2);
			 			} else if(!PLAYERLIST_authed[i]) {
			 				SetPlayerColor(i, COLOR_GRAY);
			 			}
						ResetPlayerWeapons(i);
						stealth[i] = 0;
						SendClientMessage(i,COLOR_RED,"You left the Stealth DM area");
					}
				}
			}
		}
	}
	return 1;
}

public BloodCheck()
{
    for(new i=0; i<MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
	    {
			if(PlayerToPoint(100, i,-1406.5973,996.7228,1024.1337))
			{
   				if(IsPlayerInAnyVehicle(i) && GetVehicleModel(GetPlayerVehicleID(i)) != 504)
       			{
					SendClientMessage(i,COLOR_WHITE,"Only Bloodring Bangers are allowed here");
					DestroyVehicle(GetPlayerVehicleID(i));
				}
			} else if(!PlayerToPoint(100, i,-1406.5973,996.7228,1024.1337)) {
				DisablePlayerCheckpoint(i);
			}
		}
	}
	return 1;
}

public RandomBounty()
{
	#define MIN_MON 100
	#define MAX_MON 100
	new rand = GetRandomOnlinePlayer();
	new rand2 = random(MIN_MON);
	new rand3 = random(MAX_MON);
	new amt = rand3 * rand2;
	new string[128];
	format(string,sizeof(string),"Server put a bounty of $%d bounty on %s",amt,PlayerName(rand));
	SendClientMessageToAll(COLOR_GREEN2,string);
	bountied[rand] = 1;
	bountymon[rand] = amt;
	SetPlayerWantedLevel(rand,6);
	return 1;
}

/*public ReloadMaps()
{
	SendRconCommand("reloadfs xObjects2");
	return 1;
}*/

public OnPlayerRequestClass(playerid, classid)
{
    PlayerPlaySound(playerid,1183,489.1373,-13.9810,1000.6797);
	inclass[playerid] = 1;
    new rand = random(sizeof(RandAnims));
	SetPlayerFacingAngle(playerid, 90);
	SetPlayerPos(playerid, 1351.0912,2136.9329,11.0156);
	SetPlayerCameraPos(playerid, 1346.7181,2136.7241,11.0156);
	SetPlayerCameraLookAt(playerid, 1346.7181,2136.7241,11.0156);
	ApplyAnimation(playerid,"DANCING",RandAnims[rand][0],4.0,1,1,1,1,1);
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnPlayerConnect(playerid)
{
	pid[playerid] = playerid;
	TextDrawShowForPlayer(playerid, TextDraw1);
	SetPlayerColor(playerid,COLOR_GRAY);
	SendDeathMessage(playerid, INVALID_PLAYER_ID, 200);
	firstspawn[playerid] = 1;
	AllowPlayerTeleport(playerid, true);
    PLAYERLIST_authed[playerid]=false;
	GetPlayerName(playerid,pname,MAX_PLAYER_NAME);
	new string[128];
	format(string,sizeof(string),"** %s has joined the server.",pname);
	SendClientMessageToAll(COLOR_GRAY, string);
    if (!udb_Exists(PlayerName(playerid)))
    {
        firstime[playerid] = 1;
		format(string,sizeof(string),"~g~Welcome to the server ~p~%s!~n~~g~Please ~r~/register",PlayerName(playerid));
		GameTextForPlayer(playerid,string,3500, 5);
	} else {
		format(string,sizeof(string),"~g~Welcome back ~p~%s!~n~~g~Please ~r~/login",PlayerName(playerid));
		GameTextForPlayer(playerid,string,3500, 5);
	}
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Welcome to Freeroam");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "If this is your first time playing, please /register for full benefits");
	SendClientMessage(playerid, COLOR_GREEN2, "Please use /help for all of our wonderful commands!");
	SendClientMessage(playerid, COLOR_GREEN2, "And please, for the love of god, read the /rules");

	SetPlayerSkillLevel(playerid, 0, 1000); SetPlayerSkillLevel(playerid, 6, 1000);
	SetPlayerSkillLevel(playerid, 1, 1000); SetPlayerSkillLevel(playerid, 7, 1000);
	SetPlayerSkillLevel(playerid, 2, 1000); SetPlayerSkillLevel(playerid, 8, 1000);
	SetPlayerSkillLevel(playerid, 3, 1000); SetPlayerSkillLevel(playerid, 9, 1000);
	SetPlayerSkillLevel(playerid, 4, 1000); SetPlayerSkillLevel(playerid, 10, 1000);
	SetPlayerSkillLevel(playerid, 5, 1000);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	pid[playerid] = -1;
    SendDeathMessage(playerid, INVALID_PLAYER_ID, 201);
	switch(reason)
	{
		case 0:
		{
			new string[128];
			GetPlayerName(playerid, pname, sizeof(pname));
			format(string, sizeof(string), "** %s has left the server. (Timeout)", pname);
			SendClientMessageToAll(COLOR_GRAY, string);
		}
		case 1:
		{
			new string[128];
			GetPlayerName(playerid, pname, sizeof(pname));
			format(string, sizeof(string), "** %s has left the server. (Leaving)", pname);
			SendClientMessageToAll(COLOR_GRAY, string);
		}
		case 2:
		{
			new string[128];
			GetPlayerName(playerid, pname, sizeof(pname));
			format(string, sizeof(string), "** %s has left the server. (Kick/Ban)", pname);
			SendClientMessageToAll(COLOR_GRAY, string);
		}
 	}
	if (PLAYERLIST_authed[playerid]) {
		GetPlayerPos(playerid,x,y,z);
		dUserSetINT(PlayerName(playerid)).("money",GetPlayerMoney(playerid));
     	dUserSetINT(PlayerName(playerid)).("x",floatround(x));
     	dUserSetINT(PlayerName(playerid)).("y",floatround(y));
     	dUserSetINT(PlayerName(playerid)).("z",floatround(z));
     	dUserSetINT(PlayerName(playerid)).("firstime",firstime[playerid]);
     	dUserSetINT(PlayerName(playerid)).("owncar",owncar[playerid]);
	}
	PLAYERLIST_authed[playerid]=false;
	bountied[playerid] = 0;
	blockgoto[playerid] = 0;
	blockpm[playerid] = 0;
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new string[128];
	if(PLAYERLIST_authed[clickedplayerid])
	{
		format(string, sizeof(string), "* Stats for %s *",PlayerName(clickedplayerid));
		SendClientMessage(playerid,COLOR_GRAY,string);
		format(string, sizeof(string), "Bank Money: $%d | Money: $%d | Kills: %d | Deaths: %d",dUserINT(PlayerName(clickedplayerid)).("bank"),dUserINT(PlayerName(clickedplayerid)).("money"),dUserINT(PlayerName(clickedplayerid)).("kills"),dUserINT(PlayerName(clickedplayerid)).("deaths"));
		SendClientMessage(playerid,COLOR_BEIGE,string);
		if(lvl1[clickedplayerid] == 1)
		{
			format(string, sizeof(string), "Rank: Admin Level 2");
			SendClientMessage(playerid,COLOR_BEIGE,string);
		} else if(lvlf[clickedplayerid] == 1) {
			format(string, sizeof(string), "Rank: Admin Level 1");
			SendClientMessage(playerid,COLOR_BEIGE,string);
		} else if(lvlf[clickedplayerid] == 0 && lvl1[clickedplayerid] == 0) {
			format(string, sizeof(string), "Rank: Player");
			SendClientMessage(playerid,COLOR_BEIGE,string);
		}
	} else {
	    SendClientMessage(playerid,COLOR_WHITE,"Cannot show stats for unregistered players (registered players are green).");
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
    PlayerPlaySound(playerid,1063,2323.6938,1283.1810,97.6072);
	inclass[playerid] = 0;
	if(justdied[playerid] == 1)
	{
	    if(PLAYERLIST_authed[playerid])
	    {
			GivePlayerMoney(playerid, 100);
			justdied[playerid] = 0;
			SetPlayerSkin(playerid,dUserINT(PlayerName(playerid)).("skin"));
		} else {
			GivePlayerMoney(playerid, 100);
			justdied[playerid] = 0;
		}
	} else if(firstspawn[playerid] == 1) {
		GivePlayerMoney(playerid, 100);
		justdied[playerid] = 0;
		if (udb_Exists(PlayerName(playerid)))
		{
    		format(s,sizeof(s),"Welcome back, %s!\n\nYou can log in now or start playing.\nMake sure to read the /rules and use /help for all server commands!",PlayerName(playerid));
    		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Freeroam",s,"Play","Log In");
    	} else {
    		format(s,sizeof(s),"Welcome to the server, %s!\n\nYou can register now or start playing.\nMake sure to read the /rules and use /help.",PlayerName(playerid));
    		ShowPlayerDialog(playerid,1,DIALOG_STYLE_MSGBOX,"NS",s,"Play","Register");
    	}
	}
	if(dUserINT(PlayerName(playerid)).("spawnloc") == 1)
	{
		SetPlayerPos(playerid,dUserINT(PlayerName(playerid)).("xsave"),dUserINT(PlayerName(playerid)).("ysave"), dUserINT(PlayerName(playerid)).("zsave"));
		SetPlayerInterior(playerid,dUserINT(PlayerName(playerid)).("int"));
	} else {
		new rand = random(sizeof(gRandomPlayerSpawns));
		SetPlayerPos(playerid, gRandomPlayerSpawns[rand][0], gRandomPlayerSpawns[rand][1], gRandomPlayerSpawns[rand][2]);
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(dialogid == 0)
    {
        if(response == 0)
		{
  			format(s,sizeof(s),"Log In: %s\n\nIf you forgot your password, contact Pyrokid",PlayerName(playerid));
  			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Log Into Server",s,"Log In","Cancel");
  			logindialog[playerid] = 1;
  		} else if(response == 1) {
            SendClientMessage(playerid, COLOR_YELLOW, "You can always log in using /login");
            logindialog[playerid] = 0;
            regdialog[playerid] = 0;
  		}
  		return 1;
    } else if(dialogid == 3) {
        if(response == 1)
        {
        	dcmd_login(playerid,inputtext);
        } else if(response == 0) {
            SendClientMessage(playerid, COLOR_YELLOW, "You can always log in using /login");
            logindialog[playerid] = 0;
            regdialog[playerid] = 0;
        }
        return 1;
    } else if(dialogid == 1) {
        if(response == 0)
		{
  			format(s,sizeof(s),"Register: %s\n\nAfter registering, you will prompted to log in",PlayerName(playerid));
  			ShowPlayerDialog(playerid,4,DIALOG_STYLE_INPUT,"Registering",s,"Register","Cancel");
  			regdialog[playerid] = 1;
  		} else if(response == 1) {
            SendClientMessage(playerid, COLOR_YELLOW, "You can always register using /register");
            regdialog[playerid] = 0;
            logindialog[playerid] = 0;
        }
  		return 1;
    } else if(dialogid == 4) {
        if(response == 1)
        {
        	dcmd_register(playerid,inputtext);
        } else if(response == 0) {
            SendClientMessage(playerid, COLOR_YELLOW, "You can always register using /register");
            regdialog[playerid] = 0;
            logindialog[playerid] = 0;
        }
        return 1;
    }
    return 0;
}

public OnPlayerDeath(playerid, killerid, reason)
{
    new playercash;
    justdied[playerid] = 1;
	if(killerid == INVALID_PLAYER_ID) {
        SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
        ResetPlayerMoney(playerid);
	} else {
		SendDeathMessage(killerid,playerid,reason);
		playercash = GetPlayerMoney(playerid);
		if (playercash > 0)  {
			GivePlayerMoney(killerid, playercash);
			ResetPlayerMoney(playerid);
		} else {
		}
 	}
 	if (IsPlayerConnected(playerid)) {
    	if (PLAYERLIST_authed[playerid]) {
    		dUserSetINT(PlayerName(playerid)).("deaths",dUserINT(PlayerName(playerid)).("deaths")+1);
  		}
	}
  	if (IsPlayerConnected(killerid)) {
    	if (PLAYERLIST_authed[killerid]) {
      		dUserSetINT(PlayerName(killerid)).("kills",dUserINT(PlayerName(killerid)).("kills")+1);
    	}
  	}
	if(bountied[playerid] == 1)
	{
	    if(killerid != INVALID_PLAYER_ID) {
		    new string[128];
		    format(string,sizeof(string),"%s killed bountied player %s for $%d",PlayerName(killerid),PlayerName(playerid),bountymon[playerid]);
			SendClientMessageToAll(COLOR_GREEN2,string);
			GivePlayerMoney(killerid, bountymon[playerid]);
			SetPlayerWantedLevel(playerid,0);
		    bountied[playerid] = 0;
		    bountymon[playerid] = 0;
	    } else {
		    new string[128];
		    format(string,sizeof(string),"%s killed his/herself but is still bountied! Get him/her!",PlayerName(playerid),PlayerName(playerid),bountymon[playerid]);
			SendClientMessageToAll(COLOR_GREEN2,string);
	    }
	}
	if(stealth[playerid] == 1)
	{
	    if(lvl1[playerid] == 1)
	    {
 			SetPlayerColor(playerid, COLOR_ORANGE);
	    } else if(lvlf[playerid] == 1) {
 			SetPlayerColor(playerid, COLOR_CA);
	    } else {
 			SetPlayerColor(playerid, COLOR_GRAY);
 		}
 		stealth[playerid] = 0;
	}
	if(bbowl[playerid] == 1)
	{
 		DisablePlayerCheckpoint(playerid);
	}
   	stealth[playerid] = 0;
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(muted[playerid] == 1)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "You are muted and cannot speak");
	    return 0;
	}
	if(text[0] == '!')
	{
	    if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	    {
			if(inclass[playerid] == 0)
			{
				new gangChat[128];
				new playername[MAX_PLAYER_NAME];
				new string[128];
				strmid(gangChat,text,1,strlen(text));
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
				format(string, sizeof(string),"%s [AdminChat]: %s", playername, gangChat);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
			   			if(lvl1[i] == 1)
						{
							SendClientMessage(i, COLOR_AQUA, string); // With lightblue color (from valets)
						}
					}
	  			}
	  		} else {
				SendClientMessage(playerid, COLOR_WHITE, "You can't team chat if you're not spawned");
	  		}
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "You need to be an Admin to use this team chat");
		}
		return 0;
	}
	SetPlayerChatBubble(playerid, text, GetPlayerColor(playerid), 100.0, 5000);
	/*format(text,256,"%s (ID %d): %s",PlayerName(playerid),playerid,text);
	SendClientMessageToAll(GetPlayerColor(playerid),text);*/
	return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	if(strfind(cmdtext, "/login", true) != -1)
    {
        printf("*** %s used the command /login",PlayerName(playerid));
	} else if(strfind(cmdtext, "/register", true) != -1)
	{
	    printf("*** %s used the command /register",PlayerName(playerid));
	} else {
	    printf("*** %s used the command %s",PlayerName(playerid),cmdtext);
	}

	if(strcmp(cmdtext, "/leave", true) == 0)
	{
	    if(GetPlayerColor(playerid) == COLOR_ORANGE)
	    {
			new string[128];
			GetPlayerName(playerid, pname, sizeof(pname));
			format(string, sizeof(string), "** %s has left the server. (Leaving)", pname);
			SendClientMessageToAll(COLOR_GRAY, string);
			SetPlayerColor(playerid, INVISIBLE);
		} else {
		    SetPlayerColor(playerid, COLOR_ORANGE);
		}
		return 1;
	}
	if(strcmp(cmdtext, "/help", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_GRAY, "* Help *");
	    SendClientMessage(playerid, COLOR_YELLOW, "/acmds: Admin Commands | /acc: Account Commands");
		SendClientMessage(playerid, COLOR_YELLOW, "/cmds: General Commands | /teles: Teleports");
		SendClientMessage(playerid, COLOR_YELLOW, "/dms: General Commands | /ints: List of Interiors");
		SendClientMessage(playerid, COLOR_YELLOW, "/animhelp: List of Animations | /race: Race Help");
		SendClientMessage(playerid, COLOR_YELLOW, "/carhelp - List of vehicle commands");
		return 1;
	}
	if(strcmp(cmdtext, "/carhelp", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_GRAY, "* Car Help *");
	    SendClientMessage(playerid, COLOR_YELLOW, "/keepcar, /releasecar, /bringcar, /lock, /unlock");
		return 1;
	}
	//==========================================================================
									//ACCOUNT
	//============================================================================
	if(strcmp(cmdtext, "/acc", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAY, "* Account Commands *");
		SendClientMessage(playerid, COLOR_YELLOW, "/register, /login, /stats, /withdraw, /deposit, /saveloc, /home, /clearloc");
		return 1;
	}
	//==========================================================================
									//GENERAL
	//============================================================================
	if(strcmp(cmdtext, "/cmds", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAY, "* General Commands *");
		SendClientMessage(playerid, COLOR_YELLOW, "/rules, /changeskin, /me, /nos, /vr, /chute, /flip, /where, /bigdive, /lastcar");
		SendClientMessage(playerid, COLOR_YELLOW, "/goto, /bug, /givecash, /bounty, /kickout, /slots, /allin, /shop, /sellcar, /setint");
		SendClientMessage(playerid, COLOR_YELLOW, "/carshop, /block, /fighting, /drunkcam");
		return 1;
	}
	if (strcmp("/carshop", cmdtext, true) == 0)
	{
		ShowMenuForPlayer(vshop,playerid);
		TogglePlayerControllable(playerid,0);
		return 1;
	}
	if(strcmp(cmdtext, "/sellcar", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    if(cartime[playerid] == 0)
		    {
		        carcd[playerid] = 60;
		        new string[128];
			    new vehh = GetPlayerVehicleID(playerid);
			    new rand = random(sizeof(RandCarAmt));
				SetVehicleToRespawn(vehh);
				cartime[playerid] = 1;
				cart[playerid] = SetTimer("SellCarCount",1000,1);
				format(string,sizeof(string),"Here is $%d for the %s",RandCarAmt[rand][0],vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
				SendClientMessage(playerid, COLOR_BROWN, string);
				GivePlayerMoney(playerid,RandCarAmt[rand][0]);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "Please wait 1 minute to sell another car");
			}
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "You need to be in a car to sell a car!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/shop", true) == 0)
	{
		ShowMenuForPlayer(shop,playerid);
		TogglePlayerControllable(playerid,0);
		return 1;
	}
	if(strcmp(cmdtext, "/slots", true)==0)
	{
		if(PlayerToPoint(500, playerid,1946.2472,1018.7954,992.4688) || PlayerToPoint(500, playerid,2234.9746,1603.9456,1006.1797))
		{
		    if(GetPlayerMoney(playerid) >= 50)
		    {
		        GivePlayerMoney(playerid, - 50);
		    	new rand = random(sizeof(Slots));
		    	new rand2 = random(sizeof(Slots2));
		    	new rand3 = random(sizeof(Slots3));
		    	new rand4 = random(MAX_MONZ);
		    	new won1 = Slots[rand][0];
		    	new won2 = Slots2[rand2][0];
		    	new won3 = Slots3[rand3][0];
		    	new string[128], str[128];
		    	if(won1 == won2 && won1 == won3 && won2 == won1 && won2 == won3 && won3 == won1 && won3 == won2)
		    	{
		    		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~r~%s, ~g~%s, ~b~%s",Slots[rand][0],Slots2[rand2][0],Slots3[rand3][0]);
	       			GameTextForPlayer(playerid, string, 4000, 3);
	       			GivePlayerMoney(playerid, rand4);
	       			format(str,sizeof(str),"You won $%d!! Congratulations!",rand4);
	       			SendClientMessage(playerid, COLOR_RED, str);
	    		} else {
		    		format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~n~~r~%s, ~g~%s, ~b~%s",Slots[rand][0],Slots2[rand2][0],Slots3[rand3][0]);
	       			GameTextForPlayer(playerid, string, 4000, 3);
	       			SendClientMessage(playerid, COLOR_RED, "You didn't win any money, try again later");
	    		}
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "You need $50 to play");
			}
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "You need to be at the 4 Dragons or Caligula's on The Strip");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/rules", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_GRAY, "* Rules *");
		SendClientMessage(playerid, COLOR_GREEN, "1. No hacking/modding/glitching");
		SendClientMessage(playerid, COLOR_GREEN, "2. Respect other players and admins");
		SendClientMessage(playerid, COLOR_GREEN, "3. No racial slurs");
		SendClientMessage(playerid, COLOR_GREEN, "4. Don't flood or spam");
		SendClientMessage(playerid, COLOR_GREEN, "5. DO NOT ADVERTISE");
		return 1;
	}
	if(strcmp(cmdtext, "/changeskin", true) == 0)
	{
	    SetPlayerHealth(playerid, 0);
		ForceClassSelection(playerid);
		return 1;
	}
	if(strcmp(cmdtext, "/vr", true)==0)
 	{
 	    if(IsPlayerInAnyVehicle(playerid))
 	    {
	  		new vehicleid=GetPlayerVehicleID(playerid);
			SetVehicleHealth(vehicleid, 1000);
			RepairVehicle(GetPlayerVehicleID(playerid));
	   		SendClientMessage(playerid, COLOR_YELLOW, "You repaired your car");
   		} else {
			SendClientMessage(playerid, COLOR_WHITE, "You're not in a vehicle!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/chute", true)==0)
	{
		GivePlayerWeapon(playerid, 46, 1);
		return 1;
	}
	if(strcmp(cmdtext, "/flip", true)==0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
		if(IsPlayerInAnyVehicle(playerid))
		{
			GetVehicleZAngle(vehicleid,z_angle);
			SetVehicleZAngle(vehicleid,z_angle);
			GetVehiclePos(vehicleid,x,y,z);
			SetVehiclePos(vehicleid,x,y,z+2);
			SendClientMessage(playerid, COLOR_YELLOW, "You flipped your car");
			SetVehicleHealth(vehicleid,1000);
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "You're not in a vehicle!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/bigdive", true)==0)
	{
  		GivePlayerWeapon(playerid, 46, 1);
		GameTextForPlayer(playerid, "~r~Big ~p~Dive!!", 10000, 3);
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, COLOR_AQUA, "You have ascended 1,000 feet from your last location");
		new vehicleid=GetPlayerVehicleID(playerid);
		GetPlayerPos(playerid,x,y,z);
		GetVehiclePos(vehicleid,x,y,z);
		SetPlayerPos(playerid,x,y,z+1000);
		SetVehiclePos(vehicleid,x,y,z+1000);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/saveloc", true) == 0)
	{
	    if(PLAYERLIST_authed[playerid])
	    {
	        dUserSetINT(PlayerName(playerid)).("spawnloc",1);
		    new Float:xs, Float:ys, Float:zs;
			GetPlayerPos(playerid,xs,ys,zs);
	     	dUserSetINT(PlayerName(playerid)).("xsave",floatround(xs));
	     	dUserSetINT(PlayerName(playerid)).("ysave",floatround(ys));
	     	dUserSetINT(PlayerName(playerid)).("zsave",floatround(zs));
	     	dUserSetINT(PlayerName(playerid)).("int",GetPlayerInterior(playerid));
	     	SendClientMessage(playerid,COLOR_GREEN2,"Position saved, you will now spawn from here! You can also load this location by using /home");
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"You need to /login or /register to save you location");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/home", true) == 0)
	{
	    if(PLAYERLIST_authed[playerid])
	    {
			if(dUserINT(PlayerName(playerid)).("spawnloc") != 0)
			{
	           	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	        	{
					new car = GetPlayerVehicleID(playerid);
					SetVehiclePos(car,dUserINT(PlayerName(playerid)).("xsave"),dUserINT(PlayerName(playerid)).("ysave"), dUserINT(PlayerName(playerid)).("zsave")+1);
					GetVehicleZAngle(car,z_angle);
					SetVehicleZAngle(car,z_angle);
					GetVehiclePos(car,x,y,z);
					SetVehiclePos(car,x,y,z+2);
				} else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
				    SetPlayerPos(playerid,dUserINT(PlayerName(playerid)).("xsave"),dUserINT(PlayerName(playerid)).("ysave"), dUserINT(PlayerName(playerid)).("zsave"));
				}
				SendClientMessage(playerid,COLOR_GREEN2,"Position loaded!");
				SetPlayerInterior(playerid,dUserINT(PlayerName(playerid)).("int"));
			} else  {
			    SendClientMessage(playerid,COLOR_WHITE,"You have no spawn positions saved!");
			}
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"You need to /login or /register to load your saved location");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/clearloc", true) == 0)
	{
	    if(PLAYERLIST_authed[playerid])
	    {
			if(dUserINT(PlayerName(playerid)).("xsave") != 0)
			{
	            dUserSetINT(PlayerName(playerid)).("spawnloc",0);
				SendClientMessage(playerid,COLOR_GREEN2,"Spawn position cleared! You will now spawn at random locations");
			} else if(dUserINT(PlayerName(playerid)).("xsave") == 0) {
			    SendClientMessage(playerid,COLOR_WHITE,"You have no spawn positions saved!");
			}
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"You need to /login or /register to load your saved location");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/lastcar", true) == 0)
	{
 		SetPlayerPos(playerid,lvx[playerid],lvy[playerid],lvz[playerid]+3);
		return 1;
	}
	//==========================================================================
									 //DEATHMATCHES
	//============================================================================
	if(strcmp(cmdtext, "/dms", true) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAY, "* Deathmatches *");
		SendClientMessage(playerid, COLOR_YELLOW, "/explodm, /helidm, /sldm, /dildm, /farmdm, /waredm");
		SendClientMessage(playerid, COLOR_YELLOW, "/moteldm, /skydm, /sniperdm, /minidm, /stealthdm");
		return 1;
	}
	if(strcmp(cmdtext, "/minidm", true)==0)
	{
	    SetPlayerPos(playerid,254.2275,66.0704,1003.6406);
	    SetPlayerFacingAngle(playerid,93.8380);
	    SetPlayerInterior(playerid,6);
	    SetPlayerHealth(playerid,100);
	    SetPlayerArmour(playerid,100);
		GivePlayerWeapon(playerid,38,15000);
		new str[128];
		format(str, sizeof(str), "%s has entered the Minigun Deathmatch Area (/minidm)", PlayerName(playerid));
		SendClientMessageToAll(COLOR_WHITE, str);
		return 1;
	}
	if(strcmp(cmdtext, "/explodm", true)==0)
	{
		SetPlayerPos(playerid, 193.6169,1431.8170,10.5859);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Exlosion Deathmatch Area (/explodm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,18,50000);
		GivePlayerWeapon(playerid,35,50000);
		GivePlayerWeapon(playerid,16,50000);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/helidm", true) == 0)
	{
		new vehicleid=GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid,374.3197,2503.7854,16.4844);
		SetVehiclePos(vehicleid,374.3197,2503.7854,16.4844);
		SetVehicleZAngle(vehicleid, 270);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Air Deathmatch Area (/helidm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		SetPlayerHealth(playerid, 100);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/sldm", true)==0)
	{
		SetPlayerPos(playerid, 942.2313,2163.3557,1012.2277);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Slaughter House DM Area (/sldm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,37,50000);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 100);
		SetPlayerInterior(playerid, 1);
		return 1;
    }
	if(strcmp(cmdtext, "/dildm", true)==0)
	{
		SetPlayerPos(playerid, 2023.7877,786.7905,11.4609);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Dildo Deathmatch Area (/dildm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,10,1);
		SetPlayerArmour(playerid,0);
		SetPlayerHealth(playerid, 1);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/farmdm", true)==0)
	{
	    SetPlayerPos(playerid, -1435.4086,-1498.0955,104.6701);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Farmer Deathmatch Area (/farmdm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,25,50000);
		GivePlayerWeapon(playerid,30,50000);
		GivePlayerWeapon(playerid,29,50000);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid,100);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/waredm", true)==0)
	{

	    SetPlayerPos(playerid, 2135.2004, -2276.2815, 20.6719);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Warehouse Deathmatch Area (/waredm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,29,50000);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid,100);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/moteldm", true)==0)
	{
		SetPlayerPos(playerid, 2217.2810,-1150.5349,1025.7969);
		SetPlayerInterior(playerid, 15);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Motel Deathmatch Area (/moteldm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,32,50000);
		GivePlayerWeapon(playerid,30,50000);
		GivePlayerWeapon(playerid,27,50000);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/skydm", true)==0)
	{
	    SetPlayerRandomSpawn3(playerid);
		SetPlayerInterior(playerid, 0);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Sky Deathmatch Area (/skydm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,6,50000);
		SetPlayerHealth(playerid, 30);
		SetPlayerArmour(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/sniperdm", true)==0)
	{
	    SetPlayerRandomSpawn2(playerid);
		new str[128]; GetPlayerName(playerid, pname, sizeof(pname));
		format(str, sizeof(str), "%s has entered the Sniper Deathmatch Area (/sniperdm)", pname);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,34,50000);
		GivePlayerWeapon(playerid,46,1);
		SetPlayerHealth(playerid, 100);
		SetPlayerArmour(playerid,0);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	//==========================================================================
									 //TELEPORTS
	//============================================================================
	if(strcmp(cmdtext, "/teles", true)==0)
	{
		SendClientMessage(playerid, COLOR_GRAY, "* List of Teleports *");
		SendClientMessage(playerid, COLOR_YELLOW, "/transfender, /archangels, /locolowco, /bike, /kickstart, /jumpsf, /jumpls, /jumplv, /bloodbowl");
		SendClientMessage(playerid, COLOR_YELLOW, "/chiliad, /area51, /4dragons, /caligulas, /highway, /bigramp, /pyroisland, /tuberunner");
        SendClientMessage(playerid, COLOR_YELLOW, "/drift, /stunt");
		return 1;
    }
	if(strcmp(cmdtext, "/bloodbowl", true)==0)
	{
	    bbowl[playerid] = 1;
		SetPlayerPos(playerid,-1424.1866,931.6810,1036.4039);
		SetPlayerFacingAngle(playerid, 354.7734);
		new str[128];
		format(str, sizeof(str), "%s entered the Bloodring Bowl Race (/bloodbowl)", PlayerName(playerid), cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		SetPlayerInterior(playerid, 15);
		GameTextForPlayer(playerid,"~g~Bash other players into the middle of the ring!",4000,5);
		SetPlayerCheckpoint(playerid, -1429.226318, 944.217346, 1032.058837, 15);
		return 1;
	}
	if(strcmp(cmdtext, "/pyroisland", true)==0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,-1830.8197,2144.4521,7.2125);
         	SetVehicleZAngle(vehicleid, 115);
	    } else {
	        SetPlayerPos(playerid,-1830.8197,2144.4521,7.2125);
	    }
		SetPlayerInterior(playerid, 0);
		SendClientMessage(playerid, COLOR_GOLD, "Welcome to Pyrokid's brand new island!!");
		return 1;
	}
	if(strcmp(cmdtext, "/bigramp", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,-316.8428,895.8846,1331.4938+10);
         	SetVehicleZAngle(vehicleid, 268.8246);
	    } else {
	        SetPlayerPos(playerid,-316.8428,895.8846,1331.4938+10);
	        SetPlayerFacingAngle(playerid,268.8246);
	        SetPlayerHealth(playerid,100);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/highway", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,2058.9238,834.1212,6.3622);
         	SetVehicleZAngle(vehicleid, 269.6113);

	    } else {
	        SetPlayerPos(playerid,2058.9238,834.1212,6.3622);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/4dragons", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,2023.2190,1007.4351,10.8203);
         	SetVehicleZAngle(vehicleid, 180.9490);

	    } else {
	        SetPlayerPos(playerid,2023.2190,1007.4351,10.8203);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/caligulas", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,2186.2656,1676.2472,11.0983);
         	SetVehicleZAngle(vehicleid, 360);

	    } else {
	        SetPlayerPos(playerid,2186.2656,1676.2472,11.0983);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/archangels", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,-2704.1106,217.9886,3.9068);
  			SetVehicleZAngle(vehicleid, 91.2124);

	    } else {
	        SetPlayerPos(playerid,-2704.1106,217.9886,3.9068);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/transfender", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,-1935.5339,227.9666,33.8833);
  			SetVehicleZAngle(vehicleid, 360);

	    } else {
	        SetPlayerPos(playerid,-1935.5339,227.9666,33.8833);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/locolowco", true) == 0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,2651.2168,-2004.1815,13.2528);
         	SetVehicleZAngle(vehicleid, 270);

	    } else {
	        SetPlayerPos(playerid,2651.2168,-2004.1815,13.2528);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/bike", true)==0)
	{
		SetPlayerPos(playerid, 1869.5515,-1365.0979,19.1406);
		SetPlayerFacingAngle(playerid,180);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is at the LS Bike Park (/bike)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	if(strcmp(cmdtext, "/kickstart", true)==0)
	{
		SetPlayerPos(playerid, -1420.4277,1616.9221,1052.5313);
		SetPlayerInterior(playerid,14);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is at the Kickstart Bike Stadium (/kickstart)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		ResetPlayerWeapons(playerid);
		return 1;
    }
	if(strcmp(cmdtext, "/jumpsf", true)==0)
	{
		SetPlayerPos(playerid, -1753.5989,885.1419,295.8750);
		GivePlayerWeapon(playerid, 46, 1);
		SetPlayerFacingAngle(playerid,360);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is base jumping in San Fierro (/jumpsf)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/jumpls", true)==0)
	{
		SetPlayerPos(playerid, 1544.8007,-1353.2369,329.4744);
		GivePlayerWeapon(playerid, 46, 1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is base jumping in Los Santos (/jumpls)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/jumplv", true)==0)
	{
		SetPlayerPos(playerid, 2056.5564,2433.5229,165.6172);
		GivePlayerWeapon(playerid, 46, 1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is base jumping in Las Venturas (/jumplv)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_WHITE, str);
		SetPlayerInterior(playerid, 0);
		return 1;
    }
	if(strcmp(cmdtext, "/chiliad", true)==0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,-2326.4612,-1619.8195,483.7120);
         	SetVehicleZAngle(vehicleid, 180);
	    } else {
	        SetPlayerPos(playerid,-2326.4612,-1619.8195,483.7120);
	    }
		SetPlayerInterior(playerid, 0);
		ResetPlayerWeapons(playerid);
		return 1;
	}
	if(strcmp(cmdtext, "/area51", true)==0)
	{
	    new vehicleid=GetPlayerVehicleID(playerid);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
         	SetVehiclePosEx(playerid,vehicleid,0,292.2483,1975.3635,17.6406);
         	SetVehicleZAngle(vehicleid, 180);
	    } else {
	        SetPlayerPos(playerid,292.2483,1975.3635,17.6406);
	    }
		SetPlayerInterior(playerid, 0);
		return 1;
	}
	//==========================================================================
									 //INTERIORS
	//============================================================================
	if(strcmp(cmdtext, "/ints", true)==0)
	{
		SendClientMessage(playerid, COLOR_GRAY, "List of Interiors");
		SendClientMessage(playerid,COLOR_YELLOW,"/andromada, /lc, /bdesire, /crackp, /bdup, /katie, /barbera");
		SendClientMessage(playerid,COLOR_YELLOW,"/michelle, /millie, /wuzi, /sweet, /ryder, /ogloc, /dam");
		SendClientMessage(playerid,COLOR_YELLOW,"/area69, /airport, /rustyb, /cjgarage, /uhome, /rcbattle");
		return 1;
    }
	if(strcmp(cmdtext, "/andromada", true)==0)
	{
		SetPlayerPos(playerid, 315.4544, 976.5972, 1960.8511);
		SetPlayerInterior(playerid, 9);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,46,1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Andromada (/andromada)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/lc", true)==0)
	{
		SetPlayerPos(playerid, -741.8495, 493.0036, 1371.9766);
		SetPlayerInterior(playerid, 1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Liberty City (/lc)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/bdesire", true)==0)
	{
		SetPlayerPos(playerid, 2350.1597, -1181.0658, 1027.9766);
		SetPlayerInterior(playerid, 5);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered the Burning Desire House (/bdesire)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/crackp", true)==0)
	{
		SetPlayerPos(playerid, 2536.5322, -1294.8425, 1044.1250);
		SetPlayerInterior(playerid, 2);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Smoke's Crack Palace (/crackp)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/bdup", true)==0)
	{
		SetPlayerPos(playerid, 1527.0468, -12.0236, 1002.0971);
		SetPlayerInterior(playerid, 9);
		SendClientMessage(playerid, COLOR_WHITE, "Enter the yellow marker to load the interior");
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered B Dup's Apartment (/bdup)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/katie", true)==0)
	{
		SetPlayerPos(playerid, 269.6405, 305.9512, 999.1484);
		SetPlayerInterior(playerid, 2);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Katie's Bedroom (/katie)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/barbera", true)==0)
	{
		SetPlayerPos(playerid, 322.5014, 303.6906, 999.1484);
		SetPlayerInterior(playerid, 5);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Barbera's Work Station (/barbera)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
 	}
	if(strcmp(cmdtext, "/michelle", true)==0)
	{
		SetPlayerPos(playerid, 306.1966, 307.8190, 1003.3047);
		SetPlayerInterior(playerid, 4);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Michelle's House (/michelle)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/millie", true)==0)
	{
		SetPlayerPos(playerid, 344.9984, 307.1824, 999.1557);
		SetPlayerInterior(playerid, 6);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Millie's Sex House (/millie)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/wuzi", true)==0)
	{
		SetPlayerPos(playerid, -2158.6731, 642.0900, 1052.3750);
		SetPlayerInterior(playerid, 1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Wu-Zi Mu's Apartment (/wuzi)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/sweet", true)==0)
	{
		SetPlayerPos(playerid, 2527.0176, -1679.2076, 1015.4986);
		SetPlayerInterior(playerid, 1);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Sweet's House (/sweet)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/ryder", true)==0)
	{
		SetPlayerPos(playerid, 2447.8704, -1704.4509, 1013.5078);
		SetPlayerInterior(playerid, 2);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Ryder's House (/ryder)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/ogloc", true)==0)
	{
		SetPlayerPos(playerid, 512.9291, -11.6929, 1001.5653);
		SetPlayerInterior(playerid, 3);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered OG Loc's Party Room (/ogloc)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/dam", true)==0)
	{
		SetPlayerPos(playerid, -944.2402, 1886.1536, 5.0051);
		SetPlayerInterior(playerid, 17);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered the LV Sherman Dam (/dam)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/area69", true)==0)
	{
		SetPlayerPos(playerid, 215.1515, 1874.0579, 13.1406);
		SetPlayerInterior(playerid, 0);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered the Area 69 Lower Level (/area69)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/uhome", true)==0)
	{
		SetPlayerPos(playerid, 2323.7063,-1147.6509,1050.7101);
		SetPlayerInterior(playerid, 12);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered the unused Safe House (/uhome)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/rcbattle", true)==0)
	{
		SetPlayerPos(playerid, -1129.8909,1057.5424,1346.4141);
		SetPlayerInterior(playerid, 10);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered the RC Battle Field (/rcbattle)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/airport", true)==0)
	{
		SetPlayerPos(playerid, -1813.2130, -58.0120, 1058.9641);
		SetPlayerInterior(playerid, 14);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s is at the Francis International Airport (/airport)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/rustyb", true)==0)
	{
		SetPlayerPos(playerid, 378.0260, -190.5155, 1000.6328);
		SetPlayerInterior(playerid, 17);
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered Rusty Brown's Ring Donuts (/rustyb)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	if(strcmp(cmdtext, "/cjgarage", true)==0)
	{
		SetPlayerPos(playerid, -2041.2334, 178.3969, 28.8465);
		SetPlayerInterior(playerid, 1);
		SendClientMessage(playerid, COLOR_WHITE, "Aim your gun for a normal view");
		new str[128]; GetPlayerName(playerid, pname, sizeof(str));
		format(str, sizeof(str), "%s has entered CJ's SF Garage (/cjgarage)", pname, cmdtext[4]);
		SendClientMessageToAll(COLOR_GREEN, str);
		return 1;
    }
	//==========================================================================
									 //ADMIN
	//============================================================================
	if(strcmp(cmdtext, "/acmds", true) == 0)
	{
	    if(lvl1[playerid] == 1)
	    {
			SendClientMessage(playerid, COLOR_GRAY, "* Admin Level 2 Commands *");
			SendClientMessage(playerid, COLOR_YELLOW, "/announce, /kick, /ban, /mute, /unmute, /getip, /freeze, /unfreeze");
			SendClientMessage(playerid, COLOR_YELLOW, " /goto, /bring, /gmx, /explode, /invisible, /heal, /armor");
			SendClientMessage(playerid, COLOR_YELLOW, " /godmode, /godcar, /unbounty");
			SendClientMessage(playerid, COLOR_YELLOW, "![message] - Admin Chat");
		} else if(lvlf[playerid] == 1) {
			SendClientMessage(playerid, COLOR_GRAY, "* Admin Level 1 Commands *");
			SendClientMessage(playerid, COLOR_YELLOW, "/kick, /ban, /mute, /unmute, /goto, /bring, /heal, /armor");
			SendClientMessage(playerid, COLOR_YELLOW, "![message] - Admin Chat");
		} else {
            SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/godmode", true) == 0)
	{
	    new godt;
	    if(lvl1[playerid] == 1)
	    {
		    if(ingod[playerid] == 0) {
			    ingod[playerid] = 1;
			    SendClientMessage(playerid, COLOR_YELLOW, "God mode activated");
			    godt = SetTimer("GodMode",500,1);
			} else {
			    ingod[playerid] = 0;
			    SendClientMessage(playerid, COLOR_YELLOW, "God mode de-activated");
			    KillTimer(godt);
			    SetPlayerHealth(playerid, 100);
			}
		} else {
            SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/godcar", true) == 0)
	{
	    new godct;
	    if(lvl1[playerid] == 1)
	    {
	    	if(IsPlayerInAnyVehicle(playerid))
	    	{
		    	if(ingodcar[playerid] == 0) {
			    	ingodcar[playerid] = 1;
			    	SendClientMessage(playerid, COLOR_YELLOW, "God car activated");
			    	godv = GetPlayerVehicleID(playerid);
			    	godct = SetTimer("GodCarMode",500,1);
				} else {
			    	ingodcar[playerid] = 0;
			    	SendClientMessage(playerid, COLOR_YELLOW, "God car de-activated");
			    	KillTimer(godct);
			    	SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
				}
			} else {
 				SendClientMessage(playerid, COLOR_WHITE, "You need to be in a vehicle!");
			}
		} else {
 			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/admins", true)==0)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "** Admins Online:");
    	for(new i = 0; i < MAX_PLAYERS; i++)
     	{
     	    if(IsPlayerConnected(i))
     	    {
	     		if(lvl1[i] == 1 || lvlf[i] == 1)
	     		{
	     		    if(invis[i] != 1)
	     		    {
			 		    new string[256];
				     	GetPlayerName(i, sendername, sizeof(sendername));
				     	format(string, sizeof(string), "%s", sendername);
				     	SendClientMessage(playerid, COLOR_GREEN2, string);
			     	}
				}
			}
		}
	    return 1;
	}
	if(strcmp(cmdtext, "/announce", true, 9)==0)
	{
		if(lvl1[playerid] == 1)
		{
			new str[128];
			format(str, sizeof(str), "%s", cmdtext[10]);
			GameTextForAll(str, 4500, 3);
		} else {
            SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
		return 1;
	}
	
	if(strcmp(cmdtext, "/vworld", true, 7)==0)
	{
		SetPlayerVirtualWorld(playerid, 1);
		return 1;
	}
	dcmd(login,5,cmdtext);
  	dcmd(register,8,cmdtext);
  	dcmd(allin,5,cmdtext);
  	dcmd(deposit,7,cmdtext);
  	dcmd(withdraw,8,cmdtext);
  	dcmd(balance,7,cmdtext);
  	dcmd(stats,5,cmdtext);
  	dcmd(kickout,7,cmdtext);
  	dcmd(givecash,8,cmdtext);
  	dcmd(armor,5,cmdtext);
  	dcmd(heal,4,cmdtext);
  	dcmd(kick,4,cmdtext);
  	dcmd(ban,3,cmdtext);
  	dcmd(mute,4,cmdtext);
  	dcmd(unmute,6,cmdtext);
  	dcmd(getip,5,cmdtext);
  	dcmd(freeze,6,cmdtext);
  	dcmd(unfreeze,8,cmdtext);
  	dcmd(bring,5,cmdtext);
  	dcmd(gmx,3,cmdtext);
  	dcmd(explode,7,cmdtext);
  	dcmd(invisible,9,cmdtext);
  	dcmd(setint,6,cmdtext);
  	dcmd(unbounty,8,cmdtext);
  	dcmd(stealthdm,9,cmdtext);
  	dcmd(bug,3,cmdtext);
  	dcmd(me,2,cmdtext);
  	dcmd(goto,4,cmdtext);
  	dcmd(bounty,6,cmdtext);
  	dcmd(block,5,cmdtext);
  	dcmd(drift,5,cmdtext);
  	dcmd(keepcar,7,cmdtext);
  	dcmd(bringcar,8,cmdtext);
  	dcmd(lock,4,cmdtext);
  	dcmd(unlock,6,cmdtext);
  	dcmd(releasecar,10,cmdtext);
  	dcmd(stunt,5,cmdtext);
  	dcmd(fighting,8,cmdtext);
  	dcmd(pm,2,cmdtext);
  	dcmd(drunkcam,8,cmdtext);
	return SendClientMessage(playerid,COLOR_WHITE,"We don't have that command, fool! Do /help for a full list of commands");
}

dcmd_drunkcam(playerid, params[])
{
	#pragma unused params
	if(drunk[playerid] == 0)
	{
	    drunk[playerid] = 1;
		SetPlayerDrunkLevel(playerid,5000);
		SendClientMessage(playerid,COLOR_YELLOW,"Drunken cam activated. /drunkcam again to de-activate");
	} else if(drunk[playerid] == 1) {
	    drunk[playerid] = 0;
		SetPlayerDrunkLevel(playerid,0);
		SendClientMessage(playerid,COLOR_YELLOW,"Drunken cam de-activated. /drunkcam again to activate");
	}
	return 1;
}

dcmd_pm(playerid, params[])
{
	new str[128], str2[128];
	if (sscanf(params, "ds", id, str))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/pm [id] [msg]\"");
	} else {
	    if(IsPlayerConnected(id))
	 	{
			if(blockpm[id] == 1)
			{
        		SendClientMessage(playerid, COLOR_WHITE, "That player is blocking PMs. Try again later.");
			} else {
				format(str2,sizeof(str2),">> PM Sent To: %s(%d): %s",PlayerName(id),id,str);
				SendClientMessage(playerid,COLOR_YELLOW,str2);
				format(str,sizeof(str),"** PM Received From: %s(%d): %s",PlayerName(playerid),playerid,str);
				SendClientMessage(id,COLOR_YELLOW,str);
			}
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"Player not connected!");
		}
	}
	return 1;
}

dcmd_stunt(playerid, params[])
{
	new op;
	new vehid = GetPlayerVehicleID(playerid);
	new string[128], sp[4], sp2;
	if (sscanf(params, "d", op))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/stunt [1-2]\"");
	} else {
		if(op == 1)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				SetVehiclePos(vehid,2112.9070,-2563.0288,13.5517);
				PutPlayerInVehicle(playerid,vehid,0);
				SetVehicleZAngle(vehid,3.0704);
			} else {
			    SetPlayerPos(playerid,2112.9070,-2563.0288,13.5517+1);
			}
			sp = "one";
			sp2 = 1;
			format(string,sizeof(string),"** %s entered stunt park %s (/stunt %d)",PlayerName(playerid),sp,sp2);
			SendClientMessage(playerid,COLOR_AQUA,string);
			SetPlayerInterior(playerid,0);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		} else if(op == 2) {
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				SetVehiclePos(vehid,4367.1846,-1875.3730,4.0630+4);
				PutPlayerInVehicle(playerid,vehid,0);
				SetVehicleZAngle(vehid,94.3241);
			} else {
			    SetPlayerPos(playerid,4419.2954,-1864.3774,4.0548+4);
			    SetPlayerFacingAngle(playerid,102.9561);
			    SetPlayerHealth(playerid,100);
			}
			sp = "two";
			sp2 = 2;
			format(string,sizeof(string),"** %s entered stunt park %s (/stunt %d)",PlayerName(playerid),sp,sp2);
			SendClientMessage(playerid,COLOR_AQUA,string);
			SetPlayerInterior(playerid,0);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"Usage: \"/stunt [1-2]\"");
		}
	}
	return 1;
}

dcmd_keepcar(playerid, params[])
{
	#pragma unused params
	if(dUserINT(PlayerName(playerid)).("owncar") != 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "You already own a car. Release it away first (/releasecar)");
	    return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "You must be in a vehicle to buy it");
	} else {
		void = GetPlayerVehicleID(playerid);
		owncar[playerid] = void;
		SendClientMessage(playerid, COLOR_GREEN2, "You now own this car. You can now bring it to you (/bring), lock it (/lock), or release it (/releasecar)");
		dUserSetINT(PlayerName(playerid)).("owncar",owncar[playerid]);
	}
	return 1;
}

dcmd_bringcar(playerid, params[])
{
	#pragma unused params
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Please get out of your current vehicle first");
		return 1;
	}
	if(owncar[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "You don't own a car");
		return 1;
	}
	new Float:angle;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid,angle);
	SetVehiclePos(owncar[playerid],x,y,z);
	SetVehicleZAngle(owncar[playerid],angle);
	PutPlayerInVehicle(playerid,owncar[playerid],0);
	return 1;
}

forward SetVehicleParamsForPlayerEx(vehicleid,playerid,objective,doorslocked);
public SetVehicleParamsForPlayerEx(vehicleid,playerid,objective,doorslocked)
{
	Vehicle[vehicleid][playerid][o] = objective;
	Vehicle[vehicleid][playerid][l] = doorslocked;
	if(IsVehicleStreamedIn(vehicleid, playerid))
	    return SetVehicleParamsForPlayer(vehicleid, playerid, objective, doorslocked);
	return 1;
}

dcmd_lock(playerid, params[])
{
	#pragma unused params
	new getveh = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid) && getveh != owncar[playerid])
	{
        SendClientMessage(playerid,COLOR_WHITE,"You cannot lock this vehicle because you do not own it");
	    return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
        SendClientMessage(playerid,COLOR_WHITE,"You're not in a vehicle");
	    return 1;
	}
	if(IsPlayerInVehicle(playerid,owncar[playerid]))
	{
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(i != playerid)
			{
				SetVehicleParamsForPlayerEx(GetPlayerVehicleID(playerid),i, 0, 1);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN2, "Vehicle locked for everyone else from the inside! /unlock to unlock it");
	} else if(!IsPlayerInVehicle(playerid,owncar[playerid]) && owncar[playerid] != 0) {
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(i != playerid)
			{
				SetVehicleParamsForPlayerEx(GetPlayerVehicleID(playerid),i, 0, 1);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN2, "Vehicle locked for everyone else from the outside! /unlock to unlock it");
	}
	return 1;
}

dcmd_unlock(playerid, params[])
{
	#pragma unused params
	new getveh = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid) && getveh != owncar[playerid])
	{
        SendClientMessage(playerid,COLOR_WHITE,"You cannot unlock this vehicle because you do not own it");
	    return 1;
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
        SendClientMessage(playerid,COLOR_WHITE,"You're not in a vehicle");
	    return 1;
	}
	if(IsPlayerInVehicle(playerid,owncar[playerid]))
	{
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(i != playerid)
			{
				SetVehicleParamsForPlayerEx(GetPlayerVehicleID(playerid),i, 0, 0);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN2, "Vehicle unlocked for everyone else from the inside! /unlock to unlock it");
	} else if(!IsPlayerInVehicle(playerid,owncar[playerid]) && owncar[playerid] != 0) {
		for(new i;i<MAX_PLAYERS;i++)
		{
			if(i != playerid)
			{
				SetVehicleParamsForPlayerEx(GetPlayerVehicleID(playerid),i, 0, 0);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN2, "Vehicle unlocked for everyone else from the outside! /unlock to unlock it");
	}
	return 1;
}

dcmd_releasecar(playerid, params[])
{
	#pragma unused params
	new getveh = GetPlayerVehicleID(playerid);
	if(IsPlayerInAnyVehicle(playerid) && getveh != owncar[playerid])
	{
        SendClientMessage(playerid,COLOR_WHITE,"You cannot release this vehicle because you do not own it");
	    return 1;
	}
	if(owncar[playerid] == 0)
	{
        SendClientMessage(playerid,COLOR_WHITE,"You do not own a vehicle");
	    return 1;
	}
	if(IsPlayerInVehicle(playerid,owncar[playerid]))
	{
		SetVehicleToRespawn(owncar[playerid]);
		owncar[playerid] = 0;
		SendClientMessage(playerid, COLOR_GREEN2, "You have released your vehicle");
	} else if(!IsPlayerInVehicle(playerid,owncar[playerid]) && owncar[playerid] != 0) {
		SetVehicleToRespawn(owncar[playerid]);
		owncar[playerid] = 0;
		SendClientMessage(playerid, COLOR_GREEN2, "You have released your vehicle");
	}
	return 1;
}

dcmd_fighting(playerid, params[])
{
	new op;
	if (sscanf(params, "d", op))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Set your fighting style - Usage: \"/fighting [1-6]\"");
	} else {
		if(op == 1)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		    SendClientMessage(playerid,COLOR_GREEN2,"You will now fight normally");
		} else if(op == 2) {
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	     	SendClientMessage(playerid,COLOR_GREEN2,"You will now fight like a boxer");
		} else if(op == 3) {
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	     	SendClientMessage(playerid,COLOR_GREEN2,"You will now fight like a kung fu master");
		} else if(op == 4) {
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
	     	SendClientMessage(playerid,COLOR_GREEN2,"You will now fight with the knee-head style");
		} else if(op == 5) {
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	     	SendClientMessage(playerid,COLOR_GREEN2,"You will now fight with the grab-kick style");
		} else if(op == 6) {
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
            SendClientMessage(playerid,COLOR_GREEN2,"You will now fight with the elbow style");
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"Set your fighting style - Usage: \"/fighting [1-6]\"");
		}
	}
	return 1;
}

dcmd_drift(playerid, params[])
{
	new op;
	new vehid = GetPlayerVehicleID(playerid);
	if (sscanf(params, "d", op))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/drift [1-3]\"");
	} else {
		if(op == 1)
		{
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				SetVehiclePos(vehid,-2398.0625,-592.1163,132.3089);
				PutPlayerInVehicle(playerid,vehid,0);
				SetVehicleZAngle(vehid,124.4686);
			} else {
			    SetPlayerPos(playerid,-2398.0625,-592.1163,132.3089);
			}
		} else if(op == 2) {
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				SetVehiclePos(vehid,-278.8565,1539.9989,75.0156);
				PutPlayerInVehicle(playerid,vehid,0);
				SetVehicleZAngle(vehid,143.2675);
			} else {
			    SetPlayerPos(playerid,-278.8565,1539.9989,75.0156);
			}
		} else if(op == 3) {
		    if(IsPlayerInAnyVehicle(playerid))
		    {
				SetVehiclePos(vehid,2302.3098,1412.1367,42.4453);
				PutPlayerInVehicle(playerid,vehid,0);
				SetVehicleZAngle(vehid,271.4098);
			} else {
			    SetPlayerPos(playerid,2302.3098,1412.1367,42.4453);
			}
		} else {
		    SendClientMessage(playerid,COLOR_WHITE,"Usage: \"/drift [1-3]\"");
		}
	}
	return 1;
}

dcmd_block(playerid, params[])
{
	new op[4];
	if (sscanf(params, "s", op))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/block [goto/pm]\"");
	} else {
		if(strcmp(params, "goto", true)==0)
		{
		    if(blockgoto[playerid] == 0)
		    {
		    	blockgoto[playerid] = 1;
		    	SendClientMessage(playerid,COLOR_GREEN,"People can no longer goto you (Use /block goto again to allow)");
			} else if(blockgoto[playerid] == 1) {
		    	blockgoto[playerid] = 0;
		    	SendClientMessage(playerid,COLOR_GREEN,"People can now goto you (Use /block goto again to disallow)");
			}
		} else if(strcmp(params, "pm", true)==0) {
		    if(blockpm[playerid] == 0)
		    {
		    	blockpm[playerid] = 1;
		    	SendClientMessage(playerid,COLOR_GREEN,"People can no longer PM you (Use /block pm again to allow)");
			} else if(blockpm[playerid] == 1) {
		    	blockpm[playerid] = 0;
		    	SendClientMessage(playerid,COLOR_GREEN,"People can now PM you (Use /block pm again to disallow)");
			}
		}
	}
	return 1;
}

dcmd_goto(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/goto [id]\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(blockgoto[id] == 1)
		{
	        SendClientMessage(playerid, COLOR_WHITE, "That player is blocking gotos. Try again later.");
		    return 1;
		}
	    if(stealth[id] == 1)
	    {
			SendClientMessage(playerid,COLOR_WHITE,"You can't goto people in /stealthdm");
			return 1;
	    }
		new Float:Angle, VehicleID;
		GetPlayerPos(id,x,y,z);
		GetPlayerFacingAngle(id,Angle);
		SetPlayerPos(playerid, x + 0.01, y + 0.01, z + 1.5);
		SetPlayerFacingAngle(playerid,Angle);
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		VehicleID = GetPlayerVehicleID(playerid);
		SetVehiclePos(VehicleID, x + 0.01, y + 0.01, z + 1.5);
		SetPlayerFacingAngle(playerid,Angle);
		PutPlayerInVehicle(playerid, VehicleID, 0);
		LinkVehicleToInterior(VehicleID,GetPlayerInterior(id));
		new tempstr[128];
		GetPlayerName(id,pname,sizeof(pname));
		format(tempstr, sizeof(tempstr), "You have been teleported to %s's location.",pname);
		SendClientMessage(playerid,COLOR_GREEN2,tempstr);
	}
	return 1;
}

dcmd_bounty(playerid, params[])
{
	new bountymoney;
	if (sscanf(params, "dd", id, bountymoney))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/bounty [id] [amount]\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else if (id == playerid) {
		SendClientMessage(playerid, COLOR_WHITE, "You can't bounty yourself");
	} else if (GetPlayerMoney(playerid) < bountymoney) {
		SendClientMessage(playerid, COLOR_WHITE, "You need to have as much money as you want to use");
	} else if (bountymoney <= 0) {
		SendClientMessage(playerid, COLOR_WHITE, "Can't bounty negatives or $0");
	} else {
		new tempstr[128];
		GetPlayerName(id,giveplayer,sizeof(giveplayer));
   		GetPlayerName(playerid,pname,sizeof(pname));
		format(tempstr, sizeof(tempstr), "%s has put a bounty of $%d on %s",pname,bountymoney,giveplayer);
 		SendClientMessageToAll(COLOR_GREEN2,tempstr);
 		SendClientMessageToAll(COLOR_GREEN2,"Kill that player to get the cash!!");
 		GivePlayerMoney(playerid, -bountymoney);
 		bountied[id] = 1;
 		bountymon[id] = bountymoney;
 		SetPlayerWantedLevel(id,6);
	}
	return 1;
}

dcmd_me(playerid, params[])
{
	new me[128];
	if (sscanf(params, "s", me))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/me [actions]\"");
	} else {
		new string[128];
		format(string,sizeof(string),"%s %s",PlayerName(playerid),me);
		SendClientMessageToAll(COLOR_TRUEPINK,string);
	}
	return 1;
}

dcmd_bug(playerid, params[])
{
	new bug[128];
	if (sscanf(params, "s", bug))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/bug [details]\"");
	} else {
		new TextTmp[128];
		new Float:X;
		new Float:Y;
		new Float:Z;
		new Float:PF;
		new InCar;
		new Cid;
		new tmpX[128];
		new tmpY[128];
		new tmpZ[128];
		new tmpPF[128];
		new tmpIC[128];
		new tmpCID[128];
		GetPlayerPos(playerid, X, Y, Z);
  		GetPlayerFacingAngle(playerid, PF);
  		if(IsPlayerInAnyVehicle(playerid) == 1)
  		{
  			Cid = GetPlayerVehicleID(playerid);
  			InCar = 1;
  		} else {
  			Cid = 0;
  			InCar = 0;
		}
		format(tmpX, sizeof(tmpX), "%f", X);
		format(tmpY, sizeof(tmpY), "%f", Y);
		format(tmpZ, sizeof(tmpZ), "%f", Z);
		format(tmpPF, sizeof(tmpPF), "%f", PF);
		format(TextTmp,sizeof(TextTmp),"%s",bug);
		format(tmpIC, sizeof(tmpIC), "%d", InCar);
		format(tmpCID, sizeof(tmpCID), "%d", Cid);
		GetPlayerIp(id, ip, sizeof(ip));

		new File:f=fopen("Bugs.txt",io_append);
		fwrite(f, "\r\n<< --- The Bug start--- >>\r\n");
		fwrite(f,"\r\n Player name and IP >>\r\n");
		fwrite(f,PlayerName(playerid));
		fwrite(f,"\r\n");
		fwrite(f,ip);
		fwrite(f,"\r\n");
		fwrite(f, "The Bug >>");
		fwrite(f,TextTmp);
		fwrite(f,"\r\n X pos >>");
		fwrite(f,tmpX);
		fwrite(f,"\r\n Y pos >>");
		fwrite(f,tmpY);
		fwrite(f,"\r\n Z pos >>");
		fwrite(f,tmpZ);
		fwrite(f,"\r\n Facing angle >>");
		fwrite(f,tmpZ);
		fwrite(f,"\r\n In car >>");
		fwrite(f,tmpIC);
		fwrite(f,"\r\n Car spawn ID >>");
		fwrite(f,tmpCID);
		fwrite(f, "\r\n<< --- End of Bug -- >>\r\n");
		fwrite(f, "\r\n");
		fwrite(f, "========================================================================\r\n");
		fclose(f);
		print("Bug reported and written to text file");
		SendClientMessage(playerid, COLOR_WHITE, "Your bug has been reported! Thank you!");
	}
	return 1;
}

dcmd_stealthdm(playerid, params[])
{
	#pragma unused params
	stealth[playerid] = 1;
	SetPlayerColor(playerid, INVISIBLE);
    SetPlayerRandomSpawn(playerid);
	ResetPlayerWeapons(playerid);
	GivePlayerWeapon(playerid,34,50000);
	GivePlayerWeapon(playerid,4,1);
	GivePlayerWeapon(playerid,23,50000);
	SetPlayerHealth(playerid, 100);
	SetPlayerArmour(playerid,0);
	SetPlayerInterior(playerid, 10);
	new str[128];
	format(str, sizeof(str), "%s has entered the Stealth Deathmatch Area (/stealthdm)", PlayerName(playerid));
	SendClientMessageToAll(COLOR_WHITE, str);
	return 1;
}

dcmd_unbounty(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/unbounty [playerid]\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(lvl1[playerid] == 1)
		{
			if(bountied[id] == 1)
			{
	  			new string[128];
			    format(string,sizeof(string),"Admin %s un-bountied player %s",PlayerName(playerid),PlayerName(id));
				SendClientMessageToAll(COLOR_GREEN2,string);
			    bountied[id] = 0;
			    bountymon[id] = 0;
			    SetPlayerWantedLevel(id,0);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "That player isn't bountied");
			}
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_setint(playerid, params[])
{
	new int;
	if (sscanf(params, "d", int))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/setint [interior]\"");
	} else {
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			SetPlayerInterior(playerid,int);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),int);
		} else {
		    SetPlayerInterior(playerid,int);
		}
	}
	return 1;
}

dcmd_allin(playerid, params[])
{
	new amt, numb, rand;
	rand = random(MAX_ALLS);
	new string[128];
	if (sscanf(params, "dd", amt, numb))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/allin [cash] [1-10]\"");
	} else {
		if(PlayerToPoint(500, playerid,1946.2472,1018.7954,992.4688) || PlayerToPoint(500, playerid,2234.9746,1603.9456,1006.1797))
		{
		    if(GetPlayerMoney(playerid) >= amt)
		    {
		        if(numb < 1 || numb > 10)
		        {
		            SendClientMessage(playerid, COLOR_WHITE, "The Lucky Number cannot be less than 1 or greater than 10");
		            return 1;
		        }
   				if(rand == numb)
		    	{
      				GivePlayerMoney(playerid, amt*2);
	        		format(string,sizeof(string),"Congrats! The Lucky Number you chose (%d) won! Your money was doubled to $%d",rand,amt*2);
		        	SendClientMessage(playerid,COLOR_RED,string);
		    	} else {
    				format(string,sizeof(string),"Sorry, the Lucky Number was %d. You lost $%d",rand,amt);
        			SendClientMessage(playerid, COLOR_RED, string);
			        GivePlayerMoney(playerid, - amt);
		    	}
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "You don't have as much money as you bet!");
			}
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "You need to be at the 4 Dragons or Caligula's on The Strip");
		}
	}
	return 1;
}

dcmd_deposit(playerid, params[])
{
	new amt;
	if (sscanf(params, "d", amt))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/deposit <amount>\"");
	} else {
		if(PLAYERLIST_authed[playerid] == 1)
	    {
     		if(!(strfind(params, "-", true) != -1))
	      	{
			    if(GetPlayerMoney(playerid) >= amt)
			    {
			        new string[128];
			        new oldmon = dUserINT(PlayerName(playerid)).("bank");
			        dUserSetINT(PlayerName(playerid)).("bank",oldmon + amt);
			        format(string,sizeof(string),"You deposited $%d dollars into your bank account!",amt);
			    	SendClientMessage(playerid, COLOR_GREEN2, string);
		      		GivePlayerMoney(playerid,-amt);
				} else {
					SendClientMessage(playerid,COLOR_WHITE, "You don't have that much money!");
				}
			} else {
			    SendClientMessage(playerid,COLOR_WHITE, "Can't deposit negatives");
			}
		} else {
		    SendClientMessage(playerid,COLOR_WHITE, "You need to /login or /register to use bank commands");
		}
	}
	return 1;
}

dcmd_withdraw(playerid, params[])
{
	new amt;
	if (sscanf(params, "d", amt))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/withdraw <amount>\"");
	} else {
		if(PLAYERLIST_authed[playerid] == 1)
	    {
     		if(!(strfind(params, "-", true) != -1))
	      	{
			    if(dUserINT(PlayerName(playerid)).("bank") >= amt)
			    {
			        new oldmon = dUserINT(PlayerName(playerid)).("bank");
			        new string[256];
			        format(string,sizeof(string),"You withdrew $%d dollars from your bank account!",amt);
  					SendClientMessage(playerid, COLOR_GREEN2, string);
       				GivePlayerMoney(playerid,amt);
       				dUserSetINT(PlayerName(playerid)).("bank",oldmon - amt);
				} else {
					SendClientMessage(playerid,COLOR_WHITE, "You don't have that much money in your account!");
				}
			} else {
		    	SendClientMessage(playerid,COLOR_WHITE, "Can't withdraw negatives");
			}
		} else {
	    	SendClientMessage(playerid,COLOR_WHITE, "You need to /login or /register to use bank commands");
		}
	}
	return 1;
}

dcmd_balance(playerid, params[])
{
	#pragma unused params
	if(PLAYERLIST_authed[playerid] == 1)
    {
		new mon = dUserINT(PlayerName(playerid)).("bank");
       	new string[128];
        format(string,sizeof(string),"You have $%d dollars in your bank account",mon);
		SendClientMessage(playerid, COLOR_GREEN2, string);
	} else {
	   	SendClientMessage(playerid,COLOR_WHITE, "You need to /login or /register to use bank commands");
	}
	return 1;
}

dcmd_stats(playerid, params[])
{
	new string[128];
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/stats <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(PLAYERLIST_authed[id])
		{
			format(string, sizeof(string), "* Stats for %s *",PlayerName(id));
			SendClientMessage(playerid,COLOR_GRAY,string);
			format(string, sizeof(string), "Bank Money: $%d | Money: $%d | Kills: %d | Deaths: %d",dUserINT(PlayerName(id)).("bank"),dUserINT(PlayerName(id)).("money"),dUserINT(PlayerName(id)).("kills"),dUserINT(PlayerName(id)).("deaths"));
			SendClientMessage(playerid,COLOR_BEIGE,string);
			if(lvl1[id] == 1)
			{
				format(string, sizeof(string), "Rank: Admin Level 2");
				SendClientMessage(playerid,COLOR_BEIGE,string);
			} else if(lvlf[id] == 1) {
				format(string, sizeof(string), "Rank: Admin Level 1");
				SendClientMessage(playerid,COLOR_BEIGE,string);
			} else if(lvlf[id] == 0 && lvl1[id] == 0) {
				format(string, sizeof(string), "Rank: Player");
				SendClientMessage(playerid,COLOR_BEIGE,string);
			}
		} else {
		    SendClientMessage(playerid,COLOR_LIGHTBLUE,"That player isn't registered");
		}
	}
	return 1;
}

dcmd_kickout(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/kickout <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(IsPlayerInAnyVehicle(playerid))
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
			    if(IsPlayerInVehicle(id,GetPlayerVehicleID(playerid)))
			    {
					new string[128];
    				GetPlayerName(playerid, sendername, sizeof(sendername));
				   	GetPlayerName(id, giveplayer, sizeof(giveplayer));
			     	format(string, sizeof(string), "** You kicked %s out of your car",giveplayer);
				    SendClientMessage(playerid, COLOR_GREEN2, string);
				    format(string, sizeof(string), "** %s kicked you out of his car",sendername);
				    SendClientMessage(id, COLOR_GREEN2, string);
					RemovePlayerFromVehicle(id);
				} else {
					SendClientMessage(playerid, COLOR_WHITE, "That player isn't in your vehicle");
				}
			} else {
			    SendClientMessage(playerid, COLOR_YELLOW, "You're are not the driver!");
			}
		} else {
			SendClientMessage(playerid, COLOR_YELLOW, "You're not even in a car!");
		}
	}
	return 1;
}

dcmd_givecash(playerid, params[])
{
	new monys;
	if (sscanf(params, "dd", id,monys))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/givecash <playerid> <amount>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		GetPlayerName(id, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if (monys <= GetPlayerMoney(playerid))
		{
		    if(id != playerid)
		    {
			    new string[128];
				GivePlayerMoney(playerid, -monys);
				GivePlayerMoney(id, monys);
				format(string, sizeof(string), "You have sent %s (player: %d), $%d.", giveplayer,id, monys);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "You have recieved $%d from %s (player: %d).", monys, sendername, playerid);
				SendClientMessage(id, COLOR_YELLOW, string);
				printf("%s(playerid:%d) has transfered %d to %s(playerid:%d)",sendername, playerid, monys, giveplayer, id);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "You can't send money to yourself");
			}
		} else {
			SendClientMessage(playerid, COLOR_YELLOW, "Invalid transaction amount.");
		}
	}
	return 1;
}

dcmd_invisible(playerid, params[])
{
	#pragma unused params
	if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	{
		if(invis[playerid] == 0)
  		{
			SendClientMessage(playerid, COLOR_GREEN, "You are now invisible for anyone who does /admins");
			SendClientMessage(playerid, COLOR_GREEN, "Use /invisible again to become visible");
			invis[playerid] = 1;
		} else if(invis[playerid] == 1) {
			SendClientMessage(playerid, COLOR_GREEN, "You are now visible for anyone who does /admins");
			SendClientMessage(playerid, COLOR_GREEN, "Use /invisible again to become invisible");
			invis[playerid] = 0;
		}
	} else {
 		SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
	}
	return 1;
}

dcmd_explode(playerid, params[])
{
	new times;
	if (sscanf(params, "dd", id, times))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/explode <playerid> <amount>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
	    if(lvl1[playerid] == 1)
	    {
		    for(new i=0; i<times; i++)
			{
		    	GetPlayerPos(id, x,y,z);
				CreateExplosion(x,y,z,/*7*/11,10);
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_gmx(playerid, params[])
{
    #pragma unused params
	if(lvl1[playerid] == 1)
	{
	    for(new i=0; i<MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
		    {
				if (PLAYERLIST_authed[i])
				{
					GetPlayerPos(i,x,y,z);
				    dUserSetINT(PlayerName(i)).("skin",GetPlayerSkin(i));
	                dUserSetINT(PlayerName(i)).("money",GetPlayerMoney(i));
			     	dUserSetINT(PlayerName(i)).("x",floatround(x));
			     	dUserSetINT(PlayerName(i)).("y",floatround(y));
			     	dUserSetINT(PlayerName(i)).("z",floatround(z));
			     	dUserSetINT(PlayerName(i)).("owncar",owncar[playerid]);
				}
			}
		}
		KillTimer(updatet);
		delaycd = 1;
        delayt = SetTimer("Delay",1000,1);
	} else {
		SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
	}
	return 1;
}

dcmd_bring(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/bring <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
			new string[128];
			format(string, sizeof(string), "You brought %s to your location", PlayerName(id));
			SendClientMessage(playerid, COLOR_GREEN2, string);
			if(lvl1[playerid] == 1) {
				if(IsPlayerInAnyVehicle(id))
				{
    				new Float:Angle;
				    new VehicleID;
				    VehicleID = GetPlayerVehicleID(id);
					GetPlayerPos(playerid,x,y,z);
					GetPlayerFacingAngle(playerid,Angle);
					SetVehiclePos(VehicleID, x + 0.01, y + 0.01, z + 1.5);
					SetPlayerFacingAngle(id,Angle);
					SetPlayerInterior(id,GetPlayerInterior(playerid));
					format(string,sizeof(string),"Admin %s teleported you to their location",sendername);
					SendClientMessage(id, COLOR_GREEN2, string);
				} else {
    				GetPlayerPos(playerid, x,y,z);
				    SetPlayerPos(id, x,y,z+3);
					format(string,sizeof(string),"Admin %s teleported you to their location",sendername);
					SendClientMessage(id, COLOR_GREEN2, string);
					SetPlayerInterior(id,GetPlayerInterior(playerid));
				}
			} else if(lvlf[playerid] == 1) {
				if(IsPlayerInAnyVehicle(id))
				{
    				new Float:Angle;
				    new VehicleID;
				    VehicleID = GetPlayerVehicleID(id);
					GetPlayerPos(playerid,x,y,z);
					GetPlayerFacingAngle(playerid,Angle);
					SetVehiclePos(VehicleID, x + 0.01, y + 0.01, z + 1.5);
					SetPlayerFacingAngle(id,Angle);
					SetPlayerInterior(id,GetPlayerInterior(playerid));
					format(string,sizeof(string),"%s teleported you to their location",sendername);
					SendClientMessage(id, COLOR_GREEN2, string);
				} else {
    				GetPlayerPos(playerid, x,y,z);
				    SetPlayerPos(id, x,y,z+3);
					format(string,sizeof(string),"%s teleported you to their location",sendername);
					SendClientMessage(id, COLOR_GREEN2, string);
					SetPlayerInterior(id,GetPlayerInterior(playerid));
				}
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_freeze(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/freeze <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(lvl1[playerid] == 1)
		{
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new string[128];
			TogglePlayerControllable(id, false);
			format(string, sizeof(string), "You froze %s", giveplayer);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string,sizeof(string),"You were frozen by %s",sendername);
			SendClientMessage(id, COLOR_WHITE, string);
		}
	}
	return 1;
}

dcmd_unfreeze(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/unfreeze <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(lvl1[playerid] == 1)
		{
			GetPlayerName(id, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new string[128];
			TogglePlayerControllable(id, true);
			format(string, sizeof(string), "You unfroze %s", giveplayer);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string,sizeof(string),"You were unfrozen by %s",sendername);
			SendClientMessage(id, COLOR_WHITE, string);
		}
	}
	return 1;
}

dcmd_getip(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/getip <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
		if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
		{
			if(IsPlayerConnected(id))
			{
				new string[128];
				GetPlayerIp(id, ip, sizeof(ip));
				format(string, sizeof(string), "%s's IP: %s", PlayerName(id), ip);
				SendClientMessage(playerid, COLOR_WHITE, string);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "No such player");
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_mute(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/mute <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
	    if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	    {
			if(muted[id] == 0)
   			{
				muted[id] = 1;
				new string[128];
			   	GetPlayerName(playerid, sendername, sizeof(sendername));
			   	GetPlayerName(id, giveplayer, sizeof(giveplayer));
			   	format(string, sizeof(string), "** You muted %s",giveplayer);
			   	SendClientMessage(playerid, COLOR_RED, string);
			   	format(string, sizeof(string), "** %s muted you",sendername);
			   	SendClientMessage(id, COLOR_RED, string);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "That player is already muted");
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_unmute(playerid, params[])
{
	if (sscanf(params, "d", id))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/unmute <playerid>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else {
	    if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	    {
			if(muted[id] == 1)
   			{
				muted[id] = 0;
				new string[128];
			   	GetPlayerName(playerid, sendername, sizeof(sendername));
			   	GetPlayerName(id, giveplayer, sizeof(giveplayer));
			   	format(string, sizeof(string), "** You unmuted %s",giveplayer);
			   	SendClientMessage(playerid, COLOR_RED, string);
			   	format(string, sizeof(string), "** %s unmuted you",sendername);
			   	SendClientMessage(id, COLOR_RED, string);
			} else {
			    SendClientMessage(playerid, COLOR_WHITE, "That player isn't muted");
			}
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "Only Admins can use this command!");
		}
	}
	return 1;
}

dcmd_kick(playerid, params[])
{
	new why[64];
	if (sscanf(params, "dz", id, why))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/kick <playerid> <reason>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else if (lvlf[playerid] == 1 && lvl1[id] == 1) {
		SendClientMessage(playerid, COLOR_WHITE, "Cannot kick Admins");
	} else {
	    if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	    {
			new name[32], names[32];
			GetPlayerName(id, name, MAX_PLAYER_NAME);
	  		GetPlayerName(playerid, names, MAX_PLAYER_NAME);
	    	new string[128];
			format(string,sizeof(string), "%s was kicked by %s, Reason: %s", name, names, why);
			SendClientMessageToAll(COLOR_YELLOW, string);
			new File:ftw=fopen("kicksbans.txt", io_append);
			format(string, sizeof(string), "Player was kicked:\r\nKicker Name: %s\r\nKicked Player: %s\r\nReason: %s\r\n\r\n", names, name, why);
			fwrite(ftw, string);
			fclose(ftw);
			Kick(id);
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "Only Admins members can use this command!");
		}
	}
	return 1;
}

dcmd_ban(playerid, params[])
{
	new why[64];
	if (sscanf(params, "dz", id, why))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/ban <playerid> <reason>\"");
	} else if (!IsPlayerConnected(id)) {
		SendClientMessage(playerid, COLOR_WHITE, "Player not found");
	} else if (lvl[id] == 1) {
		SendClientMessage(playerid, COLOR_WHITE, "Cannot kick other admins");
	} else {
	    if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
	    {
			new name[32], names[32];
			GetPlayerName(id, name, MAX_PLAYER_NAME);
	  		GetPlayerName(playerid, names, MAX_PLAYER_NAME);
	    	new string[128];
			format(string,sizeof(string), "%s was kicked by %s, Reason: %s", name, names, why);
			SendClientMessageToAll(COLOR_YELLOW, string);
			new File:ftw=fopen("kicksbans.txt", io_append);
			format(string, sizeof(string), "Player was kicked:\r\nKicker Name: %s\r\nKicked Player: %s\r\nReason: %s\r\n\r\n", names, name, why);
			fwrite(ftw, string);
			fclose(ftw);
			Ban(id);
		} else {
		    SendClientMessage(playerid, COLOR_WHITE, "Only Admins members can use this command!");
		}
	}
	return 1;
}


dcmd_heal(playerid, params[])
{
	new health;
	new string[128];
 	if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
  	{
		if (sscanf(params, "di", id, health))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/heal <playerid> <amount>\"");
		} else if (!IsPlayerConnected(id)) {
			SendClientMessage(playerid, COLOR_WHITE, "Player not found");
		} else {
			if(health < 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You cannot give negative health");
				return 1;
			}
			if(lvlf[playerid] == 1 && health > 100)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You cannot give more than 100 health");
				return 1;
			}
   			if(lvlf[playerid] == 1 && lvl1[id] == 1)
	    	{
		        SendClientMessage(playerid, COLOR_WHITE, "You cannot heal admins higher than you");
		        return 1;
		    }
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    GetPlayerName(id, giveplayer, sizeof(giveplayer));
	 		format(string, sizeof(string), "You healed %s with %d health", giveplayer,health);
			SendClientMessage(playerid, COLOR_GREEN2, string);
			if(lvl1[playerid] == 1) {
				format(string,sizeof(string),"Admin %s gave you %d health",sendername,health);
				SendClientMessage(id, COLOR_GREEN2, string);
				SetPlayerHealth(id,health);
			} else if(lvlf[playerid] == 1) {
				format(string,sizeof(string),"%s gave you %d health",sendername,health);
				SendClientMessage(id, COLOR_GREEN2, string);
				SetPlayerHealth(id,health);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_WHITE, "You need to be an Admin to use this command");
	}
	return 1;
}

dcmd_armor(playerid, params[])
{
	new armor;
	new string[128];
 	if(lvl1[playerid] == 1 || lvlf[playerid] == 1)
  	{
		if (sscanf(params, "di", id, armor))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Usage: \"/armor <playerid> <amount>\"");
		} else if (!IsPlayerConnected(id)) {
			SendClientMessage(playerid, COLOR_WHITE, "Player not found");
		} else {
			if(armor < 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You cannot give negative armour");
				return 1;
			}
			if(lvlf[playerid] == 1 && armor > 100)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You cannot give more than 100 armour");
				return 1;
			}
   			if(lvlf[playerid] == 1 && lvl1[id] == 1)
	    	{
		        SendClientMessage(playerid, COLOR_WHITE, "You cannot give armour to admins higher than you");
		        return 1;
		    }
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    GetPlayerName(id, giveplayer, sizeof(giveplayer));
	 		format(string, sizeof(string), "You armoured %s with %d armour", giveplayer,armor);
			SendClientMessage(playerid, COLOR_GREEN2, string);
			if(lvl1[playerid] == 1) {
				format(string,sizeof(string),"Admin %s gave you %d armour",sendername,armor);
				SendClientMessage(id, COLOR_GREEN2, string);
				SetPlayerArmour(id,armor);
			} else if(lvlf[playerid] == 1) {
				format(string,sizeof(string),"%s gave you %d armour",sendername,armor);
				SendClientMessage(id, COLOR_GREEN2, string);
				SetPlayerArmour(id,armor);
			}
		}
	} else {
	    SendClientMessage(playerid, COLOR_WHITE, "You need to be an Admin to use this command");
	}
	return 1;
}

dcmd_register(playerid,params[]) {
    if (PLAYERLIST_authed[playerid]) return SystemMsg(playerid,"Already logged in.");
    if (udb_Exists(PlayerName(playerid))) return SystemMsg(playerid,"Account already exists, please use '/login password'.");
    if (strlen(params)==0) return SystemMsg(playerid,"SYNTAX: '/register password'");
    if (inclass[playerid] == 1) return SystemMsg(playerid,"Please spawn before registering");
    if (regdialog[playerid] == 0 && udb_Create(PlayerName(playerid),params) && dUserSetINT(PlayerName(playerid)).("lvl1",0) &&  dUserSetINT(PlayerName(playerid)).("lvlf",0) &&  dUserSetINT(PlayerName(playerid)).("bank",0) &&  dUserSetINT(PlayerName(playerid)).("spawnloc",0) && dUserSetINT(PlayerName(playerid)).("owncar",0))
 	{
		return SystemMsg(playerid,"Account successfully created. Login with '/login password' now.");
	} else if (regdialog[playerid] == 1 && udb_Create(PlayerName(playerid),params) && dUserSetINT(PlayerName(playerid)).("lvl1",0) &&  dUserSetINT(PlayerName(playerid)).("lvlf",0) &&  dUserSetINT(PlayerName(playerid)).("bank",0) &&  dUserSetINT(PlayerName(playerid)).("spawnloc",0) && dUserSetINT(PlayerName(playerid)).("owncar",0))
	{
		if (udb_Exists(PlayerName(playerid)))
		{
  			format(s,sizeof(s),"Thanks for registering, %s!\nRegistered players get many more benefits than regular players\n\nPlease log in.",PlayerName(playerid));
  			ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Log Into Server",s,"Log In","Cancel");
  			logindialog[playerid] = 1;
    	}
	}
	return true;
}

dcmd_login(playerid,params[]) {
    if (PLAYERLIST_authed[playerid]) return SystemMsg(playerid,"Already logged in.");
    if (!udb_Exists(PlayerName(playerid))) return SystemMsg(playerid,"Account doesn't exist, please use '/register password'.");
    if (strlen(params)==0) return SystemMsg(playerid,"SYNTAX: '/login password'");
    if (inclass[playerid] == 1) return SystemMsg(playerid,"Please spawn before logging in");
    if ((!udb_CheckLogin(PlayerName(playerid),params)) && (logindialog[playerid] == 1))
    {
		format(s,sizeof(s),"Log In: %s\n\nLog in failed. Try again.\nIf you forgot your password, contact Pyrokid",PlayerName(playerid));
		ShowPlayerDialog(playerid,3,DIALOG_STYLE_INPUT,"Log Into Server",s,"Log In","Cancel");
		logindialog[playerid] = 1;
	}
    if (udb_CheckLogin(PlayerName(playerid),params)) {
        if(firstime[playerid] == 1)
        {
			firstime[playerid] = 0;
			PLAYERLIST_authed[playerid]=true;
			SetPlayerColor(playerid,COLOR_GREEN2);
			logindialog[playerid] = 0;
			return SystemMsg(playerid,"Successfully logged in!");
		} else {
			SetPlayerSkin(playerid,dUserINT(PlayerName(playerid)).("skin"));
		    GivePlayerMoney(playerid,dUserINT(PlayerName(playerid)).("money")-GetPlayerMoney(playerid));
		    if(dUserINT(PlayerName(playerid)).("spawnloc") == 1)
		    {
				SetPlayerPos(playerid,dUserINT(PlayerName(playerid)).("xsave"),dUserINT(PlayerName(playerid)).("ysave"), dUserINT(PlayerName(playerid)).("zsave"));
			} else {

			}
			SetPlayerColor(playerid,COLOR_GREEN2);
			firstime[playerid] = dUserINT(PlayerName(playerid)).("firstime");
			lvl1[playerid] = dUserINT(PlayerName(playerid)).("lvl1");
			lvlf[playerid] = dUserINT(PlayerName(playerid)).("lvlf");
			owncar[playerid] = dUserINT(PlayerName(playerid)).("owncar");
  			PLAYERLIST_authed[playerid]=true;
  			new string[128];
			if(lvl1[playerid] == 1)
			{
			    format(string,sizeof(string),"%s Logged in as Admin Level 2",PlayerName(playerid));
			    SendClientMessageToAll(COLOR_YELLOW,string);
			    lvl[playerid] = 1;
			    SetPlayerColor(playerid,COLOR_ORANGE);
			} else if(lvlf[playerid] == 1) {
			    format(string,sizeof(string),"%s Logged in as Admin Level 1",PlayerName(playerid));
			    SendClientMessageToAll(COLOR_YELLOW,string);
			    lvl[playerid] = 1;
			    SetPlayerColor(playerid,COLOR_CA);
			}
			if((strfind(PlayerName(playerid), "NegroCollegeFund", true) != -1))
			{
				SetPlayerColor(playerid,COLOR_TRUEPINK);
			}
			logindialog[playerid] = 0;
			regdialog[playerid] = 0;
			return SystemMsg(playerid,"Successfully logged in!");
		}
    }
    return SystemMsg(playerid,"Login failed!");
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    new str[30];
    if (newstate == 2 || newstate == 3)
    {
        format(str, sizeof(str), "~g~%s", vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
        GameTextForPlayer(playerid, str, 5000, 1);
       	GetPlayerPos(playerid,lvx[playerid],lvy[playerid],lvz[playerid]);
    } else if(oldstate == 2 || oldstate == 3) {
        GetPlayerPos(playerid,lvx[playerid],lvy[playerid],lvz[playerid]);
    }
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(bbowl[playerid] == 1)
	{
		GivePlayerMoney(playerid,10);
	}
	new rand = random(sizeof(gRandBloodCPs));
	for(new i=0; i<MAX_PLAYERS; i++)
	{
 		if(IsPlayerConnected(i))
	    {
	        if(bbowl[i] == 1)
	        {
                SetPlayerCheckpoint(i, gRandBloodCPs[rand][0], gRandBloodCPs[rand][1], gRandBloodCPs[rand][2], 15);
			}
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == pu)
	{
	    new string[128];
	    DestroyPickup(pu);
		new rand = random(sizeof(gHiddenSpawns));
		pu = CreatePickup(1212,3,gHiddenSpawns[rand][0],gHiddenSpawns[rand][1],gHiddenSpawns[rand][2]);
		SetPlayerCheckpoint(playerid,gHiddenSpawns[rand][0],gHiddenSpawns[rand][1],gHiddenSpawns[rand][2],5);
		format(string,sizeof(string),"%s found the hidden package and was rewarded $500,000. The pickup has been reset, find it!",PlayerName(playerid));
		SendClientMessage(playerid,COLOR_YELLOW,string);
		printf("%s found the hidden package and was rewarded $500,000",PlayerName(playerid));
		GivePlayerMoney(playerid,500000);
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:current = GetPlayerMenu(playerid);
	new Float:a;
	GetPlayerPos(playerid,x,y,z);
	GetPlayerFacingAngle(playerid, a);
	new car[128], num;
	if(current == shop)
	{
	    switch(row)
	    {
	        case 0:
	        {
	        	HideMenuForPlayer(shop,playerid);
	        	ShowMenuForPlayer(shopweps,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 1:
	        {
	        	HideMenuForPlayer(shop,playerid);
	        	ShowMenuForPlayer(shoplife,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 2:
	        {
	        	HideMenuForPlayer(shop,playerid);
	        	ShowMenuForPlayer(shoprc,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 3:
	        {
	        	HideMenuForPlayer(shop,playerid);
	        	TogglePlayerControllable(playerid,1);
	        }
		}
	} else if(current == shopweps)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 2000)
	                {
			            TogglePlayerControllable(playerid,1);
						GivePlayerWeapon(playerid, 16, 5);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought 5 grenades for $2,000");
						GivePlayerMoney(playerid,-2000);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					GivePlayerWeapon(playerid, 16, 20);
					SendClientMessage(playerid, COLOR_GREEN2, "You got 20 grenades for free (admin discount)");
				}
	        }
	        case 1:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 2000)
	                {
			            TogglePlayerControllable(playerid,1);
						GivePlayerWeapon(playerid, 18, 5);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought 5 molotovs for $2,000");
						GivePlayerMoney(playerid,-2000);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
     				TogglePlayerControllable(playerid,1);
					GivePlayerWeapon(playerid, 18, 20);
					SendClientMessage(playerid, COLOR_GREEN2, "You got 20 molotovs for free (admin discount)");
				}
	        }
	        case 2:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 2500)
	                {
			            TogglePlayerControllable(playerid,1);
						GivePlayerWeapon(playerid, 34, 15);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought a sniper with 15 bullets for $2,500");
						GivePlayerMoney(playerid,-2500);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					GivePlayerWeapon(playerid, 34, 100);
					SendClientMessage(playerid, COLOR_GREEN2, "You got a sniper with 100 bullets for free (admin discount)");
				}
	        }
	        case 3:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 3500)
	                {
			            TogglePlayerControllable(playerid,1);
						GivePlayerWeapon(playerid, 35, 5);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought an RPG with 5 bullets for $3,500");
						GivePlayerMoney(playerid,-3500);
					} else  {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					GivePlayerWeapon(playerid, 35, 100);
					SendClientMessage(playerid, COLOR_GREEN2, "You got an RPG with 100 bullets for free (admin discount)");
				}
	        }
	        case 4:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 3000)
	                {
			            TogglePlayerControllable(playerid,1);
						GivePlayerWeapon(playerid, 37, 1000);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought a flamethrower for $3,000");
						GivePlayerMoney(playerid,-3000);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					GivePlayerWeapon(playerid, 37, 1000);
					SendClientMessage(playerid, COLOR_GREEN2, "You got a flamethrower for free (admin discount)");
				}
	        }
	        case 5:
	        {
	            TogglePlayerControllable(playerid,0);
				HideMenuForPlayer(shopweps,playerid);
				ShowMenuForPlayer(shop,playerid);
	        }
		}
	} else if(current == shoplife)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 200)
	                {
			            TogglePlayerControllable(playerid,1);
						SetPlayerHealth(playerid,100);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought health for $200");
						GivePlayerMoney(playerid,-200);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					SetPlayerHealth(playerid,100);
					SendClientMessage(playerid, COLOR_GREEN2, "You got health for free (admin discount)");
				}
	        }
	        case 1:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 300)
	                {
			            TogglePlayerControllable(playerid,1);
						SetPlayerArmour(playerid,100);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought armour for $300");
						GivePlayerMoney(playerid,-300);
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					SetPlayerArmour(playerid,100);
					SendClientMessage(playerid, COLOR_GREEN2, "You got armour for free (admin discount)");
				}
	        }
	        case 2:
	        {
	            TogglePlayerControllable(playerid,0);
				HideMenuForPlayer(shoplife,playerid);
				ShowMenuForPlayer(shop,playerid);
	        }
		}
	} else if(current == shoprc)
	{
	    switch(row)
	    {
	        case 0:
	        {
	            if(lvl[playerid] != 1) {
	                if(GetPlayerMoney(playerid) >= 200)
	                {
			            TogglePlayerControllable(playerid,1);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought an RC Bandit for $200");
						GivePlayerMoney(playerid,-200);
						num++;
						car[num] = CreateVehicle(441, x, y, z, a, -1, -1, 5000);
						LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
    				SendClientMessage(playerid, COLOR_GREEN2, "You got an RC Bandit for free (admin discount)");
					num++;
					car[num] = CreateVehicle(441, x, y, z, a, -1, -1, 5000);
					LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
				}
	        }
	        case 1:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 200)
	                {
			            TogglePlayerControllable(playerid,1);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought an RC Baron for $200");
						GivePlayerMoney(playerid,-200);
						num++;
						car[num] = CreateVehicle(464, x, y, z, a, -1, -1, 5000);
						LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					SendClientMessage(playerid, COLOR_GREEN2, "You got an RC Baron for free (admin discount)");
					num++;
					car[num] = CreateVehicle(464, x, y, z, a, -1, -1, 5000);
					LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
				}
	        }
	        case 2:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 200)
	                {
			            TogglePlayerControllable(playerid,1);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought an RC Helicopter for $200");
						GivePlayerMoney(playerid,-200);
						num++;
						car[num] = CreateVehicle(465, x, y, z, a, -1, -1, 5000);
						LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					SendClientMessage(playerid, COLOR_GREEN2, "You got an RC Helicopter for free (admin discount)");
					num++;
					car[num] = CreateVehicle(465, x, y, z, a, -1, -1, 5000);
    				LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
				}
	        }
	        case 3:
	        {
	            if(lvl[playerid] != 1)
	            {
	                if(GetPlayerMoney(playerid) >= 200)
	                {
			            TogglePlayerControllable(playerid,1);
						SendClientMessage(playerid, COLOR_GREEN2, "You bought an RC Tank for $200");
						GivePlayerMoney(playerid,-200);
						num++;
						car[num] = CreateVehicle(564, x, y, z, a, -1, -1, 5000);
						LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
					} else {
						SendClientMessage(playerid,BANRED,"You don't have enough money");
						TogglePlayerControllable(playerid,1);
					}
				} else if(lvl[playerid] == 1) {
    				TogglePlayerControllable(playerid,1);
					SendClientMessage(playerid, COLOR_GREEN2, "You got an RC Tank for free (admin discount)");
					num++;
					car[num] = CreateVehicle(564, x, y, z, a, -1, -1, 5000);
					LinkVehicleToInterior(car[num],GetPlayerInterior(playerid));
				}
	        }
	        case 4:
	        {
	            TogglePlayerControllable(playerid,0);
				HideMenuForPlayer(shoprc,playerid);
				ShowMenuForPlayer(shop,playerid);
	        }
		}
	} else if(current == vshop)
	{
	    switch(row)
	    {
	        case 0:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	ShowMenuForPlayer(cars,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 1:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	ShowMenuForPlayer(planes,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 2:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	ShowMenuForPlayer(bikes,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 3:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	ShowMenuForPlayer(lowrider,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 4:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	ShowMenuForPlayer(offroad,playerid);
	        	TogglePlayerControllable(playerid,0);
	        }
	        case 5:
	        {
	        	HideMenuForPlayer(vshop,playerid);
	        	TogglePlayerControllable(playerid,1);
	        }
		}
	} else if(current == cars)
	{
	    switch(row)
	    {
	        case 0: //INFERNUS
	        {
	            if(GetPlayerMoney(playerid) >= 30000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(411, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-30000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $30000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 1: //TURISMO
	        {
	            if(GetPlayerMoney(playerid) >= 30000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(451, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-30000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $30000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 2: //SUPER GT
	        {
	            if(GetPlayerMoney(playerid) >= 30000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(506, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-30000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $30000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 3: //JESTER
	        {
	            if(GetPlayerMoney(playerid) >= 30000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(559, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-30000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $30000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 4: //CHEETAH
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(415, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 5: //BULLET
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(541, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 6: //BANSHEE
	        {
	            if(GetPlayerMoney(playerid) >= 15000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(429, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-15000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $15000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 7: //FLASH
	        {
	            if(GetPlayerMoney(playerid) >= 15000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(565, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-15000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
	            } else {
	                SendClientMessage(playerid, BANRED, "Need $15000 to buy this vehicle");
                 	TogglePlayerControllable(playerid,1);
	            }
	        }
	        case 8:
	        {
	            TogglePlayerControllable(playerid,0);
	            HideMenuForPlayer(cars,playerid);
	            ShowMenuForPlayer(vshop,playerid);
	        }
		}
	} else if(current == planes)
	{
	    switch(row)
	    {
	        case 0: //ANDROMADA
	        {
	            if(GetPlayerMoney(playerid) >= 40000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(592, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-40000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $40000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 1: //AT-400
	        {
	            if(GetPlayerMoney(playerid) >= 40000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(577, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-40000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $40000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 2: //RUSTLER
	        {
	            if(GetPlayerMoney(playerid) >= 35000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(476, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-35000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $35000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 3: //SHAMAL
	        {
	            if(GetPlayerMoney(playerid) >= 35000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(519, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-35000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $35000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 4: //BEAGLE
	        {
	            if(GetPlayerMoney(playerid) >= 30000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(511, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-30000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $30000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 5: //DODO
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(593, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 6: //SKIMMER
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(460, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 7: //STUNT PLANE
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(513, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 8: //MAVERICK
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(487, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 9: //SPARROW
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(469, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 10:
	        {
	            HideMenuForPlayer(planes,playerid);
	            ShowMenuForPlayer(vshop,playerid);
	            TogglePlayerControllable(playerid,0);
	        }
		}
	} else if(current == bikes)
	{
	    switch(row)
	    {
	        case 0: //NRG-500
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(522, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 1: //PCJ-600
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(461, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 2: //FCR-900
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(521, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 3: //BF-500
	        {
	            if(GetPlayerMoney(playerid) >= 15000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(581, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-15000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $15000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 4: //SANCHEZ
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(468, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
                    LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 5: //QUAD
	        {
	            if(GetPlayerMoney(playerid) >= 5000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(471, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-5000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $5000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 6: //BMX
	        {
	            if(GetPlayerMoney(playerid) >= 1000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(481, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-1000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $1000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 7: //BIKE
	        {
	            if(GetPlayerMoney(playerid) >= 1000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(509, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-1000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $1000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 8: //MOUNTAIN BIKE
	        {
	            if(GetPlayerMoney(playerid) >= 1000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(510, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-1000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $1000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 9:
	        {
	            HideMenuForPlayer(bikes,playerid);
	            ShowMenuForPlayer(vshop,playerid);
	            TogglePlayerControllable(playerid,0);
	        }
		}
	} else if(current == lowrider)
	{
	    switch(row)
	    {
	        case 0: //SAVANNA
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(567, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 1: //REMINGTON
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(534, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 2: //BLADE
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(536, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 3: //SLAMVAN
	        {
	            if(GetPlayerMoney(playerid) >= 20000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(535, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-20000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $20000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
 	        case 4:
	        {
	            HideMenuForPlayer(lowrider,playerid);
	            ShowMenuForPlayer(vshop,playerid);
	            TogglePlayerControllable(playerid,0);
	        }
		}
	} else if(current == offroad)
	{
	    switch(row)
	    {
	        case 0: //BANDITO
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(568, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 1: //BF-INJECTION
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(424, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 2: //MONSTER TRUCK
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(556, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 3: //SANDKING
	        {
	            if(GetPlayerMoney(playerid) >= 10000)
	            {
	                num2++;
	                veh[playerid][num2] = CreateVehicle(495, x, y, z, a, -1, -1, 5000);
	                PutPlayerInVehicle(playerid,veh[playerid][num2],0);
	                GivePlayerMoney(playerid,-10000);
	                TogglePlayerControllable(playerid,1);
	                LinkVehicleToInterior(veh[playerid][num2],GetPlayerInterior(playerid));
				} else {
	                SendClientMessage(playerid, BANRED, "Need $10000 to buy this vehicle");
	                TogglePlayerControllable(playerid,1);
	            }
			}
	        case 4:
	        {
	            HideMenuForPlayer(offroad,playerid);
	            ShowMenuForPlayer(vshop,playerid);
	            TogglePlayerControllable(playerid,0);
	        }
		}
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
    TogglePlayerControllable(playerid,1);
	return 1;
}

public clock()
{
	new hour,minute,second,string[128];
	new year,month,day;
	gettime(hour,minute,second);
	getdate(year,month,day);
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(hour == 0){SetWorldTime(0);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~r~%d~w~:~g~0%d~n~~g~Todays Date - %s/%d/%d",hour,minute,month,day,year); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 1){SetWorldTime(1);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 2){SetWorldTime(2);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 3){SetWorldTime(3);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 4){SetWorldTime(4);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 5){SetWorldTime(5);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 6){SetWorldTime(6);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~~g~%d~w~:~g~~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 7){SetWorldTime(7);format(string,sizeof(string),"~w~Time is - ~g~~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 8){SetWorldTime(8);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 9){SetWorldTime(9);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~0%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 10){SetWorldTime(10);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 11){SetWorldTime(11);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 12){SetWorldTime(12);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 13){SetWorldTime(13);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 14){SetWorldTime(14);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 15){SetWorldTime(15);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 16){SetWorldTime(16);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 17){SetWorldTime(17);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 18){SetWorldTime(18);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 19){SetWorldTime(19);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 20){SetWorldTime(20);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 21){SetWorldTime(21);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 22){SetWorldTime(22);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 23){SetWorldTime(23);SetPlayerWeather(i,0);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
			if (hour == 24){SetWorldTime(24);format(string,sizeof(string),"~w~Time is - ~g~%d~w~:~g~%d",hour,minute); GameTextForPlayer(i, string, 3500, 3);}
		}
	}
	return 1;
}

public PlayerToPoint(Float:radi, playerid, Float:xx, Float:yy, Float:zz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -xx);
		tempposy = (oldposy -yy);
		tempposz = (oldposz -zz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

stock GetRandomOnlinePlayer()
{
    new
        online[MAX_PLAYERS],
        loop;
    for (new i;i<MAX_PLAYERS;i++)
    {
        if (IsPlayerConnected(i) == 1) online[loop++] = i;
    }
    return (loop == 0) ? (INVALID_PLAYER_ID) : (online[random(loop)]);
}

stock SetVehiclePosEx(playerid,vehicleid,seatid,Float:xx,Float:yy,Float:zz)
{
    if(IsPlayerConnected(playerid))
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			SetVehiclePos(vehicleid,xx,yy,zz);
			PutPlayerInVehicle(playerid,vehicleid,seatid);
			return 1;
	    }
	}
	return 0;
}
